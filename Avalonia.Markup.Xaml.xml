<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Avalonia.Markup.Xaml</name>
    </assembly>
    <members>
        <member name="T:Avalonia.Markup.Xaml.Data.Binding">
            <summary>
            A XAML binding.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.Binding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Markup.Xaml.Data.Binding"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.Binding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Markup.Xaml.Data.Binding"/> class.
            </summary>
            <param name="path">The binding path.</param>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.Converter">
            <summary>
            Gets or sets the <see cref="T:Avalonia.Markup.IValueConverter"/> to use.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.ConverterParameter">
            <summary>
            Gets or sets a parameter to pass to <see cref="P:Avalonia.Markup.Xaml.Data.Binding.Converter"/>.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.ElementName">
            <summary>
            Gets or sets the name of the element to use as the binding source.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.FallbackValue">
            <summary>
            Gets or sets the value to use when the binding is unable to produce a value.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.Mode">
            <summary>
            Gets or sets the binding mode.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.Path">
            <summary>
            Gets or sets the binding path.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.Priority">
            <summary>
            Gets or sets the binding priority.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.RelativeSource">
            <summary>
            Gets or sets the relative source for the binding.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.Source">
            <summary>
            Gets or sets the source for the binding.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.Binding.ValidationMethods">
            <summary>
            Gets or sets the validation methods for the binding to use.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.Binding.Initiate(Avalonia.IAvaloniaObject,Avalonia.AvaloniaProperty,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Avalonia.Markup.Xaml.Data.DelayedBinding">
            <summary>
            Provides delayed bindings for controls.
            </summary>
            <remarks>
            The XAML engine applies its bindings in a delayed manner where bindings are only applied
            when a control has finished initializing. This was done because applying bindings as soon
            as controls are created means that long-form bindings (i.e. bindings that don't use the
            `{Binding}` markup extension) don't work as the binding is applied to the property before
            the binding properties are set, and looking at WPF it uses a similar mechanism for bindings
            that come from XAML.
            </remarks>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.DelayedBinding.Add(Avalonia.Controls.IControl,Avalonia.AvaloniaProperty,Avalonia.Data.IBinding)">
            <summary>
            Adds a delayed binding to a control.
            </summary>
            <param name="target">The control.</param>
            <param name="property">The property on the control to bind to.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.DelayedBinding.ApplyBindings(Avalonia.Controls.IControl)">
            <summary>
            Applies any delayed bindings to a control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="T:Avalonia.Markup.Xaml.Data.MultiBinding">
            <summary>
            A XAML binding that calculates an aggregate value from multiple child <see cref="P:Avalonia.Markup.Xaml.Data.MultiBinding.Bindings"/>.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.MultiBinding.Bindings">
            <summary>
            Gets the collection of child bindings.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.MultiBinding.Converter">
            <summary>
            Gets or sets the <see cref="T:Avalonia.Markup.IValueConverter"/> to use.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.MultiBinding.FallbackValue">
            <summary>
            Gets or sets the value to use when the binding is unable to produce a value.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.MultiBinding.Mode">
            <summary>
            Gets or sets the binding mode.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.MultiBinding.Priority">
            <summary>
            Gets or sets the binding priority.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.MultiBinding.RelativeSource">
            <summary>
            Gets or sets the relative source for the binding.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.MultiBinding.Initiate(Avalonia.IAvaloniaObject,Avalonia.AvaloniaProperty,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.MultiBinding.Bind(Avalonia.IAvaloniaObject,Avalonia.AvaloniaProperty,System.Reactive.Subjects.ISubject{System.Object})">
            <summary>
            Applies a binding subject to a property on an instance.
            </summary>
            <param name="target">The target instance.</param>
            <param name="property">The target property.</param>
            <param name="subject">The binding subject.</param>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.StyleResourceBinding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Markup.Xaml.Data.StyleResourceBinding"/> class.
            </summary>
            <param name="name">The resource name.</param>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.StyleResourceBinding.Mode">
            <inheritdoc/>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.StyleResourceBinding.Name">
            <summary>
            Gets the resource name.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Data.StyleResourceBinding.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Data.StyleResourceBinding.Initiate(Avalonia.IAvaloniaObject,Avalonia.AvaloniaProperty,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Avalonia.Markup.Xaml.Parsers.SelectorParser">
            <summary>
            Parses a <see cref="T:Avalonia.Styling.Selector"/> from text.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Parsers.SelectorParser.#ctor(System.Func{System.String,System.String,System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Markup.Xaml.Parsers.SelectorParser"/> class.
            </summary>
            <param name="typeResolver">
            The type resolver to use. The type resolver is a function which accepts two strings:
            a type name and a XML namespace prefix and a type name, and should return the resolved
            type or throw an exception.
            </param>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Parsers.SelectorParser.Parse(System.String)">
            <summary>
            Parses a <see cref="T:Avalonia.Styling.Selector"/> from a string.
            </summary>
            <param name="s">The string.</param>
            <returns>The parsed selector.</returns>
        </member>
        <member name="T:Avalonia.Markup.Xaml.AvaloniaXamlLoader">
            <summary>
            Loads XAML for a avalonia application.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.AvaloniaXamlLoader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Markup.Xaml.AvaloniaXamlLoader"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.AvaloniaXamlLoader.#ctor(OmniXaml.IParserFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Markup.Xaml.AvaloniaXamlLoader"/> class.
            </summary>
            <param name="xamlParserFactory">The parser factory to use.</param>
        </member>
        <member name="P:Avalonia.Markup.Xaml.AvaloniaXamlLoader.UriContext">
            <summary>
            Gets the URI of the XAML file currently being loaded.
            </summary>
            <remarks>
            TODO: Making this internal for now as I'm not sure that this is the correct
            thing to do, but its needd by <see cref="!:StyleInclude"/> to get the URL of
            the currently loading XAML file, as we can't use the OmniXAML parsing context
            there. Maybe we need a way to inject OmniXAML context into the objects its
            constructing?
            </remarks>
        </member>
        <member name="M:Avalonia.Markup.Xaml.AvaloniaXamlLoader.Load(System.Object)">
            <summary>
            Loads the XAML into a Avalonia component.
            </summary>
            <param name="obj">The object to load the XAML into.</param>
        </member>
        <member name="M:Avalonia.Markup.Xaml.AvaloniaXamlLoader.Load(System.Type,System.Object)">
            <summary>
            Loads the XAML for a type.
            </summary>
            <param name="type">The type.</param>
            <param name="rootInstance">
            The optional instance into which the XAML should be loaded.
            </param>
            <returns>The loaded object.</returns>
        </member>
        <member name="M:Avalonia.Markup.Xaml.AvaloniaXamlLoader.Load(System.Uri,System.Uri,System.Object)">
            <summary>
            Loads XAML from a URI.
            </summary>
            <param name="uri">The URI of the XAML file.</param>
            <param name="baseUri">
            A base URI to use if <paramref name="uri"/> is relative.
            </param>
            <param name="rootInstance">
            The optional instance into which the XAML should be loaded.
            </param>
            <returns>The loaded object.</returns>
        </member>
        <member name="M:Avalonia.Markup.Xaml.AvaloniaXamlLoader.Load(System.String,System.Object)">
            <summary>
            Loads XAML from a string.
            </summary>
            <param name="xaml">The string containing the XAML.</param>
            <param name="rootInstance">
            The optional instance into which the XAML should be loaded.
            </param>
            <returns>The loaded object.</returns>
        </member>
        <member name="M:Avalonia.Markup.Xaml.AvaloniaXamlLoader.Load(System.IO.Stream,System.Object,System.Uri)">
            <summary>
            Loads XAML from a stream.
            </summary>
            <param name="stream">The stream containing the XAML.</param>
            <param name="rootInstance">
            The optional instance into which the XAML should be loaded.
            </param>
            <param name="uri">The URI of the XAML</param>
            <returns>The loaded object.</returns>
        </member>
        <member name="M:Avalonia.Markup.Xaml.AvaloniaXamlLoader.GetUrisFor(System.Type)">
            <summary>
            Gets the URI for a type.
            </summary>
            <param name="type">The type.</param>
            <returns>The URI.</returns>
        </member>
        <member name="T:Avalonia.Markup.Xaml.Styling.StyleInclude">
            <summary>
            Includes a style from a URL.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Styling.StyleInclude.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Markup.Xaml.Styling.StyleInclude"/> class.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Styling.StyleInclude.Source">
            <summary>
            Gets or sets the source URL.
            </summary>
        </member>
        <member name="P:Avalonia.Markup.Xaml.Styling.StyleInclude.Loaded">
            <summary>
            Gets the loaded style.
            </summary>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Styling.StyleInclude.Attach(Avalonia.Styling.IStyleable,Avalonia.Styling.IStyleHost)">
            <inheritdoc/>
        </member>
        <member name="M:Avalonia.Markup.Xaml.Styling.StyleInclude.FindResource(System.String)">
            <summary>
            Tries to find a named resource within the style.
            </summary>
            <param name="name">The resource name.</param>
            <returns>
            The resource if found, otherwise <see cref="F:Avalonia.AvaloniaProperty.UnsetValue"/>.
            </returns>
        </member>
    </members>
</doc>
