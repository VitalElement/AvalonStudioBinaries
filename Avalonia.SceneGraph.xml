<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Avalonia.SceneGraph</name>
    </assembly>
    <members>
        <member name="T:Avalonia.Animation.PageSlide">
            <summary>
            Transitions between two pages by sliding them horizontally.
            </summary>
        </member>
        <member name="M:Avalonia.Animation.PageSlide.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Animation.PageSlide"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Animation.PageSlide.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Animation.PageSlide"/> class.
            </summary>
            <param name="duration">The duration of the animation.</param>
        </member>
        <member name="P:Avalonia.Animation.PageSlide.Duration">
            <summary>
            Gets the duration of the animation.
            </summary>
        </member>
        <member name="M:Avalonia.Animation.PageSlide.Start(Avalonia.VisualTree.IVisual,Avalonia.VisualTree.IVisual,System.Boolean)">
            <summary>
            Starts the animation.
            </summary>
            <param name="from">
            The control that is being transitioned away from. May be null.
            </param>
            <param name="to">
            The control that is being transitioned to. May be null.
            </param>
            <param name="forward">
            If true, the new page is slid in from the right, or if false from the left.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that tracks the progress of the animation.
            </returns>
        </member>
        <member name="M:Avalonia.Animation.PageSlide.GetVisualParent(Avalonia.VisualTree.IVisual,Avalonia.VisualTree.IVisual)">
            <summary>
            Gets the common visual parent of the two control.
            </summary>
            <param name="from">The from control.</param>
            <param name="to">The to control.</param>
            <returns>The common parent.</returns>
            <exception cref="T:System.ArgumentException">
            The two controls do not share a common parent.
            </exception>
            <remarks>
            Any one of the parameters may be null, but not both.
            </remarks>
        </member>
        <member name="T:Avalonia.Animation.CrossFade">
            <summary>
            Defines a cross-fade animation between two <see cref="T:Avalonia.VisualTree.IVisual"/>s.
            </summary>
        </member>
        <member name="M:Avalonia.Animation.CrossFade.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Animation.CrossFade"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Animation.CrossFade.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Animation.CrossFade"/> class.
            </summary>
            <param name="duration">The duration of the animation.</param>
        </member>
        <member name="P:Avalonia.Animation.CrossFade.Duration">
            <summary>
            Gets the duration of the animation.
            </summary>
        </member>
        <member name="M:Avalonia.Animation.CrossFade.Start(Avalonia.VisualTree.IVisual,Avalonia.VisualTree.IVisual)">
            <summary>
            Starts the animation.
            </summary>
            <param name="from">
            The control that is being transitioned away from. May be null.
            </param>
            <param name="to">
            The control that is being transitioned to. May be null.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that tracks the progress of the animation.
            </returns>
        </member>
        <member name="M:Avalonia.Animation.CrossFade.Avalonia#Animation#IPageTransition#Start(Avalonia.VisualTree.IVisual,Avalonia.VisualTree.IVisual,System.Boolean)">
            <summary>
            Starts the animation.
            </summary>
            <param name="from">
            The control that is being transitioned away from. May be null.
            </param>
            <param name="to">
            The control that is being transitioned to. May be null.
            </param>
            <param name="forward">
            Unused for cross-fades.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that tracks the progress of the animation.
            </returns>
        </member>
        <member name="T:Avalonia.Animation.IPageTransition">
            <summary>
            Interface for animations that transition between two pages.
            </summary>
        </member>
        <member name="M:Avalonia.Animation.IPageTransition.Start(Avalonia.VisualTree.IVisual,Avalonia.VisualTree.IVisual,System.Boolean)">
            <summary>
            Starts the animation.
            </summary>
            <param name="from">
            The control that is being transitioned away from. May be null.
            </param>
            <param name="to">
            The control that is being transitioned to. May be null.
            </param>
            <param name="forward">
            If the animation is bidirectional, controls the direction of the animation.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that tracks the progress of the animation.
            </returns>
        </member>
        <member name="T:Avalonia.INamed">
            <summary>
            Interface for named elements.
            </summary>
        </member>
        <member name="P:Avalonia.INamed.Name">
            <summary>
            Gets the element name.
            </summary>
        </member>
        <member name="T:Avalonia.Matrix">
            <summary>
            A 2x3 matrix.
            </summary>
        </member>
        <member name="M:Avalonia.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Matrix"/> struct.
            </summary>
            <param name="m11">The first element of the first row.</param>
            <param name="m12">The second element of the first row.</param>
            <param name="m21">The first element of the second row.</param>
            <param name="m22">The second element of the second row.</param>
            <param name="offsetX">The first element of the third row.</param>
            <param name="offsetY">The second element of the third row.</param>
        </member>
        <member name="P:Avalonia.Matrix.Identity">
            <summary>
            Returns the multiplicative identity matrix.
            </summary>
        </member>
        <member name="P:Avalonia.Matrix.IsIdentity">
            <summary>
            Returns whether the matrix is the identity matrix.
            </summary>
        </member>
        <member name="P:Avalonia.Matrix.HasInverse">
            <summary>
            HasInverse Property - returns true if this matrix is invertable, false otherwise.
            </summary>
        </member>
        <member name="P:Avalonia.Matrix.M11">
            <summary>
            The first element of the first row
            </summary>
        </member>
        <member name="P:Avalonia.Matrix.M12">
            <summary>
            The second element of the first row
            </summary>
        </member>
        <member name="P:Avalonia.Matrix.M21">
            <summary>
            The first element of the second row
            </summary>
        </member>
        <member name="P:Avalonia.Matrix.M22">
            <summary>
            The second element of the second row
            </summary>
        </member>
        <member name="P:Avalonia.Matrix.M31">
            <summary>
            The first element of the third row
            </summary>
        </member>
        <member name="P:Avalonia.Matrix.M32">
            <summary>
            The second element of the third row
            </summary>
        </member>
        <member name="M:Avalonia.Matrix.op_Multiply(Avalonia.Matrix,Avalonia.Matrix)">
            <summary>
            Multiplies two matrices together and returns the resulting matrix.
            </summary>
            <param name="value1">The first source matrix.</param>
            <param name="value2">The second source matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Avalonia.Matrix.op_UnaryNegation(Avalonia.Matrix)">
            <summary>
            Negates the given matrix by multiplying all values by -1.
            </summary>
            <param name="value">The source matrix.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Avalonia.Matrix.op_Equality(Avalonia.Matrix,Avalonia.Matrix)">
            <summary>
            Returns a boolean indicating whether the given matrices are equal.
            </summary>
            <param name="value1">The first source matrix.</param>
            <param name="value2">The second source matrix.</param>
            <returns>True if the matrices are equal; False otherwise.</returns>
        </member>
        <member name="M:Avalonia.Matrix.op_Inequality(Avalonia.Matrix,Avalonia.Matrix)">
            <summary>
            Returns a boolean indicating whether the given matrices are not equal.
            </summary>
            <param name="value1">The first source matrix.</param>
            <param name="value2">The second source matrix.</param>
            <returns>True if the matrices are not equal; False if they are equal.</returns>
        </member>
        <member name="M:Avalonia.Matrix.CreateRotation(System.Double)">
            <summary>
            Creates a rotation matrix using the given rotation in radians.
            </summary>
            <param name="radians">The amount of rotation, in radians.</param>
            <returns>A rotation matrix.</returns>
        </member>
        <member name="M:Avalonia.Matrix.CreateScale(System.Double,System.Double)">
            <summary>
            Creates a scale matrix from the given X and Y components.
            </summary>
            <param name="xScale">Value to scale by on the X-axis.</param>
            <param name="yScale">Value to scale by on the Y-axis.</param>
            <returns>A scaling matrix.</returns>
        </member>
        <member name="M:Avalonia.Matrix.CreateScale(Avalonia.Vector)">
            <summary>
            Creates a scale matrix from the given vector scale.
            </summary>
            <param name="scales">The scale to use.</param>
            <returns>A scaling matrix.</returns>
        </member>
        <member name="M:Avalonia.Matrix.CreateTranslation(Avalonia.Vector)">
            <summary>
            Creates a translation matrix from the given vector.
            </summary>
            <param name="position">The translation position.</param>
            <returns>A translation matrix.</returns>
        </member>
        <member name="M:Avalonia.Matrix.CreateTranslation(System.Double,System.Double)">
            <summary>
            Creates a translation matrix from the given X and Y components.
            </summary>
            <param name="xPosition">The X position.</param>
            <param name="yPosition">The Y position.</param>
            <returns>A translation matrix.</returns>
        </member>
        <member name="M:Avalonia.Matrix.ToRadians(System.Double)">
            <summary>
            Converts an ange in degrees to radians.
            </summary>
            <param name="angle">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
        </member>
        <member name="M:Avalonia.Matrix.GetDeterminant">
            <summary>
            Calculates the determinant for this matrix.
            </summary>
            <returns>The determinant.</returns>
            <remarks>
            The determinant is calculated by expanding the matrix with a third column whose
            values are (0,0,1).
            </remarks>
        </member>
        <member name="M:Avalonia.Matrix.Equals(Avalonia.Matrix)">
            <summary>
            Returns a boolean indicating whether the matrix is equal to the other given matrix.
            </summary>
            <param name="other">The other matrix to test equality against.</param>
            <returns>True if this matrix is equal to other; False otherwise.</returns>
        </member>
        <member name="M:Avalonia.Matrix.Equals(System.Object)">
            <summary>
            Returns a boolean indicating whether the given Object is equal to this matrix instance.
            </summary>
            <param name="obj">The Object to compare against.</param>
            <returns>True if the Object is equal to this matrix; False otherwise.</returns>
        </member>
        <member name="M:Avalonia.Matrix.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Avalonia.Matrix.ToString">
            <summary>
            Returns a String representing this matrix instance.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Avalonia.Matrix.Invert">
            <summary>
            Inverts the Matrix.
            </summary>
            <returns>The inverted matrix.</returns>
        </member>
        <member name="T:Avalonia.Media.AlignmentY">
            <summary>
            Describes how content is positioned vertically in a container.
            </summary>
        </member>
        <member name="F:Avalonia.Media.AlignmentY.Top">
            <summary>
            The contents align themselves with the top of the container
            </summary>
        </member>
        <member name="F:Avalonia.Media.AlignmentY.Center">
            <summary>
            The contents align themselves with the center of the container
            </summary>
        </member>
        <member name="F:Avalonia.Media.AlignmentY.Bottom">
            <summary>
            The contents align themselves with the bottom of the container
            </summary>
        </member>
        <member name="T:Avalonia.Media.AlignmentX">
            <summary>
            Describes how content is positioned horizontally in a container.
            </summary>
        </member>
        <member name="F:Avalonia.Media.AlignmentX.Left">
            <summary>
            The contents align themselves with the left of the container
            </summary>
        </member>
        <member name="F:Avalonia.Media.AlignmentX.Center">
            <summary>
            The contents align themselves with the center of the container
            </summary>
        </member>
        <member name="F:Avalonia.Media.AlignmentX.Right">
            <summary>
            The contents align themselves with the right of the container
            </summary>
        </member>
        <member name="F:Avalonia.Media.ArcSegment.IsLargeArcProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.ArcSegment.IsLargeArc"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.ArcSegment.PointProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.ArcSegment.Point"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.ArcSegment.RotationAngleProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.ArcSegment.RotationAngle"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.ArcSegment.SizeProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.ArcSegment.Size"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.ArcSegment.SweepDirectionProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.ArcSegment.SweepDirection"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.ArcSegment.IsLargeArc">
            <summary>
            Gets or sets a value indicating whether this instance is large arc.
            </summary>
            <value>
            <c>true</c> if this instance is large arc; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Avalonia.Media.ArcSegment.Point">
            <summary>
            Gets or sets the point.
            </summary>
            <value>
            The point.
            </value>
        </member>
        <member name="P:Avalonia.Media.ArcSegment.RotationAngle">
            <summary>
            Gets or sets the rotation angle.
            </summary>
            <value>
            The rotation angle.
            </value>
        </member>
        <member name="P:Avalonia.Media.ArcSegment.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Avalonia.Media.ArcSegment.SweepDirection">
            <summary>
            Gets or sets the sweep direction.
            </summary>
            <value>
            The sweep direction.
            </value>
        </member>
        <member name="F:Avalonia.Media.BezierSegment.Point1Property">
            <summary>
            Defines the <see cref="P:Avalonia.Media.BezierSegment.Point1"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.BezierSegment.Point2Property">
            <summary>
            Defines the <see cref="P:Avalonia.Media.BezierSegment.Point2"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.BezierSegment.Point3Property">
            <summary>
            Defines the <see cref="P:Avalonia.Media.BezierSegment.Point3"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.BezierSegment.Point1">
            <summary>
            Gets or sets the point1.
            </summary>
            <value>
            The point1.
            </value>
        </member>
        <member name="P:Avalonia.Media.BezierSegment.Point2">
            <summary>
            Gets or sets the point2.
            </summary>
            <value>
            The point2.
            </value>
        </member>
        <member name="P:Avalonia.Media.BezierSegment.Point3">
            <summary>
            Gets or sets the point3.
            </summary>
            <value>
            The point3.
            </value>
        </member>
        <member name="T:Avalonia.Media.Brush">
            <summary>
            Describes how an area is painted.
            </summary>
        </member>
        <member name="F:Avalonia.Media.Brush.OpacityProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.Brush.Opacity"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brush.Opacity">
            <summary>
            Gets or sets the opacity of the brush.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Brush.Parse(System.String)">
            <summary>
            Parses a brush string.
            </summary>
            <param name="s">The brush string.</param>
            <returns>The <see cref="T:Avalonia.Media.Color"/>.</returns>
        </member>
        <member name="T:Avalonia.Media.Brushes">
            <summary>
            Predefined brushes.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Brushes.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Avalonia.Media.Brushes"/> class.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.AliceBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.AliceBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.AntiqueWhite">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.AntiqueWhite"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Aqua">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.AliceBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Aquamarine">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Aquamarine"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Azure">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Azure"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Beige">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Beige"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Bisque">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Bisque"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Black">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Black"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.BlanchedAlmond">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.BlanchedAlmond"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Blue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Blue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.BlueViolet">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.BlueViolet"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Brown">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Brown"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.BurlyWood">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.BurlyWood"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.CadetBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.CadetBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Chartreuse">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Chartreuse"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Chocolate">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Chocolate"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Coral">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Coral"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.CornflowerBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.CornflowerBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Cornsilk">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Cornsilk"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Crimson">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Crimson"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Cyan">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Cyan"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkCyan">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkCyan"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkGoldenrod">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkGoldenrod"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkGray">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkGray"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkKhaki">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkKhaki"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkMagenta">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkMagenta"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkOliveGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkOliveGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkOrange">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkOrange"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkOrchid">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkOrchid"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkRed">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkRed"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkSalmon">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkSalmon"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkSeaGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkSeaGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkSlateBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkSlateBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkSlateGray">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkSlateGray"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkTurquoise">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkTurquoise"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DarkViolet">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DarkViolet"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DeepPink">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DeepPink"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DeepSkyBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DeepSkyBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DimGray">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DimGray"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.DodgerBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.DodgerBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Firebrick">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Firebrick"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.FloralWhite">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.FloralWhite"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.ForestGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.ForestGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Fuchsia">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Fuchsia"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Gainsboro">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Gainsboro"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.GhostWhite">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.GhostWhite"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Gold">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Gold"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Goldenrod">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Goldenrod"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Gray">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Gray"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Green">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Green"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.GreenYellow">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.GreenYellow"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Honeydew">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Honeydew"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.HotPink">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.HotPink"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.IndianRed">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.IndianRed"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Indigo">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Indigo"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Ivory">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Ivory"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Khaki">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Khaki"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Lavender">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Lavender"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LavenderBlush">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LavenderBlush"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LawnGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LawnGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LemonChiffon">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LemonChiffon"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightCoral">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightCoral"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightCyan">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightCyan"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightGoldenrodYellow">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightGoldenrodYellow"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightGray">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightGray"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightPink">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightPink"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightSalmon">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightSalmon"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightSeaGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightSeaGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightSkyBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightSkyBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightSlateGray">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightSlateGray"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightSteelBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightSteelBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LightYellow">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LightYellow"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Lime">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Lime"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.LimeGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.LimeGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Linen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Linen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Magenta">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Magenta"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Maroon">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Maroon"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumAquamarine">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumAquamarine"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumOrchid">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumOrchid"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumPurple">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumPurple"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumSeaGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumSeaGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumSlateBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumSlateBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumSpringGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumSpringGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumTurquoise">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumTurquoise"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MediumVioletRed">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MediumVioletRed"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MidnightBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MidnightBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MintCream">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MintCream"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.MistyRose">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.MistyRose"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Moccasin">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Moccasin"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.NavajoWhite">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.NavajoWhite"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Navy">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Navy"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.OldLace">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.OldLace"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Olive">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Olive"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.OliveDrab">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.OliveDrab"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Orange">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Orange"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.OrangeRed">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.OrangeRed"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Orchid">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Orchid"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.PaleGoldenrod">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.PaleGoldenrod"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.PaleGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.PaleGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.PaleTurquoise">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.PaleTurquoise"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.PaleVioletRed">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.PaleVioletRed"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.PapayaWhip">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.PapayaWhip"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.PeachPuff">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.PeachPuff"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Peru">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Peru"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Pink">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Pink"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Plum">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Plum"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.PowderBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.PowderBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Purple">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Purple"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Red">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Red"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.RosyBrown">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.RosyBrown"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.RoyalBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.RoyalBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SaddleBrown">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SaddleBrown"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Salmon">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Salmon"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SandyBrown">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SandyBrown"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SeaGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SeaGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SeaShell">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SeaShell"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Sienna">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Sienna"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Silver">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Silver"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SkyBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SkyBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SlateBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SlateBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SlateGray">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SlateGray"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Snow">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Snow"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SpringGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SpringGreen"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.SteelBlue">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.SteelBlue"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Tan">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Tan"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Teal">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Teal"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Thistle">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Thistle"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Tomato">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Tomato"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Transparent">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Transparent"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Turquoise">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Turquoise"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Violet">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Violet"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Wheat">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Wheat"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.White">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.White"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.WhiteSmoke">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.WhiteSmoke"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.Yellow">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.Yellow"/> colored brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Brushes.YellowGreen">
            <summary>
            Gets an <see cref="P:Avalonia.Media.Colors.YellowGreen"/> colored brush.
            </summary>
        </member>
        <member name="T:Avalonia.Media.Color">
            <summary>
            An ARGB color.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Color.A">
            <summary>
            Gets or sets the Alpha component of the color.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Color.R">
            <summary>
            Gets or sets the Red component of the color.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Color.G">
            <summary>
            Gets or sets the Green component of the color.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Color.B">
            <summary>
            Gets or sets the Blue component of the color.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a <see cref="T:Avalonia.Media.Color"/> from alpha, red, green and blue components.
            </summary>
            <param name="a">The alpha component.</param>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Avalonia.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a <see cref="T:Avalonia.Media.Color"/> from red, green and blue components.
            </summary>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Avalonia.Media.Color.FromUInt32(System.UInt32)">
            <summary>
            Creates a <see cref="T:Avalonia.Media.Color"/> from an integer.
            </summary>
            <param name="value">The integer value.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:Avalonia.Media.Color.Parse(System.String)">
            <summary>
            Parses a color string.
            </summary>
            <param name="s">The color string.</param>
            <returns>The <see cref="T:Avalonia.Media.Color"/>.</returns>
        </member>
        <member name="M:Avalonia.Media.Color.ToString">
            <summary>
            Returns the string representation of the color.
            </summary>
            <returns>
            The string representation of the color.
            </returns>
        </member>
        <member name="M:Avalonia.Media.Color.ToUint32">
            <summary>
            Returns the integer representation of the color.
            </summary>
            <returns>
            The integer representation of the color.
            </returns>
        </member>
        <member name="T:Avalonia.Media.Colors">
            <summary>
            Defines a set of predefined colors.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.AliceBlue">
            <summary>
            Gets a color with an ARGB value of #fff0f8ff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.AntiqueWhite">
            <summary>
            Gets a color with an ARGB value of #fffaebd7.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Aqua">
            <summary>
            Gets a color with an ARGB value of #ff00ffff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Aquamarine">
            <summary>
            Gets a color with an ARGB value of #ff7fffd4.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Azure">
            <summary>
            Gets a color with an ARGB value of #fff0ffff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Beige">
            <summary>
            Gets a color with an ARGB value of #fff5f5dc.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Bisque">
            <summary>
            Gets a color with an ARGB value of #ffffe4c4.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Black">
            <summary>
            Gets a color with an ARGB value of #ff000000.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.BlanchedAlmond">
            <summary>
            Gets a color with an ARGB value of #ffffebcd.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Blue">
            <summary>
            Gets a color with an ARGB value of #ff0000ff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.BlueViolet">
            <summary>
            Gets a color with an ARGB value of #ff8a2be2.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Brown">
            <summary>
            Gets a color with an ARGB value of #ffa52a2a.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.BurlyWood">
            <summary>
            Gets a color with an ARGB value of #ffdeb887.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.CadetBlue">
            <summary>
            Gets a color with an ARGB value of #ff5f9ea0.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Chartreuse">
            <summary>
            Gets a color with an ARGB value of #ff7fff00.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Chocolate">
            <summary>
            Gets a color with an ARGB value of #ffd2691e.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Coral">
            <summary>
            Gets a color with an ARGB value of #ffff7f50.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.CornflowerBlue">
            <summary>
            Gets a color with an ARGB value of #ff6495ed.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Cornsilk">
            <summary>
            Gets a color with an ARGB value of #fffff8dc.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Crimson">
            <summary>
            Gets a color with an ARGB value of #ffdc143c.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Cyan">
            <summary>
            Gets a color with an ARGB value of #ff00ffff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkBlue">
            <summary>
            Gets a color with an ARGB value of #ff00008b.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkCyan">
            <summary>
            Gets a color with an ARGB value of #ff008b8b.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkGoldenrod">
            <summary>
            Gets a color with an ARGB value of #ffb8860b.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkGray">
            <summary>
            Gets a color with an ARGB value of #ffa9a9a9.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkGreen">
            <summary>
            Gets a color with an ARGB value of #ff006400.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkKhaki">
            <summary>
            Gets a color with an ARGB value of #ffbdb76b.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkMagenta">
            <summary>
            Gets a color with an ARGB value of #ff8b008b.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkOliveGreen">
            <summary>
            Gets a color with an ARGB value of #ff556b2f.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkOrange">
            <summary>
            Gets a color with an ARGB value of #ffff8c00.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkOrchid">
            <summary>
            Gets a color with an ARGB value of #ff9932cc.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkRed">
            <summary>
            Gets a color with an ARGB value of #ff8b0000.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkSalmon">
            <summary>
            Gets a color with an ARGB value of #ffe9967a.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkSeaGreen">
            <summary>
            Gets a color with an ARGB value of #ff8fbc8f.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkSlateBlue">
            <summary>
            Gets a color with an ARGB value of #ff483d8b.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkSlateGray">
            <summary>
            Gets a color with an ARGB value of #ff2f4f4f.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkTurquoise">
            <summary>
            Gets a color with an ARGB value of #ff00ced1.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DarkViolet">
            <summary>
            Gets a color with an ARGB value of #ff9400d3.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DeepPink">
            <summary>
            Gets a color with an ARGB value of #ffff1493.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DeepSkyBlue">
            <summary>
            Gets a color with an ARGB value of #ff00bfff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DimGray">
            <summary>
            Gets a color with an ARGB value of #ff696969.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.DodgerBlue">
            <summary>
            Gets a color with an ARGB value of #ff1e90ff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Firebrick">
            <summary>
            Gets a color with an ARGB value of #ffb22222.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.FloralWhite">
            <summary>
            Gets a color with an ARGB value of #fffffaf0.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.ForestGreen">
            <summary>
            Gets a color with an ARGB value of #ff228b22.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Fuchsia">
            <summary>
            Gets a color with an ARGB value of #ffff00ff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Gainsboro">
            <summary>
            Gets a color with an ARGB value of #ffdcdcdc.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.GhostWhite">
            <summary>
            Gets a color with an ARGB value of #fff8f8ff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Gold">
            <summary>
            Gets a color with an ARGB value of #ffffd700.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Goldenrod">
            <summary>
            Gets a color with an ARGB value of #ffdaa520.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Gray">
            <summary>
            Gets a color with an ARGB value of #ff808080.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Green">
            <summary>
            Gets a color with an ARGB value of #ff008000.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.GreenYellow">
            <summary>
            Gets a color with an ARGB value of #ffadff2f.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Honeydew">
            <summary>
            Gets a color with an ARGB value of #fff0fff0.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.HotPink">
            <summary>
            Gets a color with an ARGB value of #ffff69b4.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.IndianRed">
            <summary>
            Gets a color with an ARGB value of #ffcd5c5c.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Indigo">
            <summary>
            Gets a color with an ARGB value of #ff4b0082.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Ivory">
            <summary>
            Gets a color with an ARGB value of #fffffff0.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Khaki">
            <summary>
            Gets a color with an ARGB value of #fff0e68c.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Lavender">
            <summary>
            Gets a color with an ARGB value of #ffe6e6fa.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LavenderBlush">
            <summary>
            Gets a color with an ARGB value of #fffff0f5.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LawnGreen">
            <summary>
            Gets a color with an ARGB value of #ff7cfc00.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LemonChiffon">
            <summary>
            Gets a color with an ARGB value of #fffffacd.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightBlue">
            <summary>
            Gets a color with an ARGB value of #ffadd8e6.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightCoral">
            <summary>
            Gets a color with an ARGB value of #fff08080.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightCyan">
            <summary>
            Gets a color with an ARGB value of #ffe0ffff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightGoldenrodYellow">
            <summary>
            Gets a color with an ARGB value of #fffafad2.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightGray">
            <summary>
            Gets a color with an ARGB value of #ffd3d3d3.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightGreen">
            <summary>
            Gets a color with an ARGB value of #ff90ee90.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightPink">
            <summary>
            Gets a color with an ARGB value of #ffffb6c1.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightSalmon">
            <summary>
            Gets a color with an ARGB value of #ffffa07a.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightSeaGreen">
            <summary>
            Gets a color with an ARGB value of #ff20b2aa.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightSkyBlue">
            <summary>
            Gets a color with an ARGB value of #ff87cefa.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightSlateGray">
            <summary>
            Gets a color with an ARGB value of #ff778899.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightSteelBlue">
            <summary>
            Gets a color with an ARGB value of #ffb0c4de.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LightYellow">
            <summary>
            Gets a color with an ARGB value of #ffffffe0.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Lime">
            <summary>
            Gets a color with an ARGB value of #ff00ff00.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.LimeGreen">
            <summary>
            Gets a color with an ARGB value of #ff32cd32.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Linen">
            <summary>
            Gets a color with an ARGB value of #fffaf0e6.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Magenta">
            <summary>
            Gets a color with an ARGB value of #ffff00ff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Maroon">
            <summary>
            Gets a color with an ARGB value of #ff800000.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumAquamarine">
            <summary>
            Gets a color with an ARGB value of #ff66cdaa.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumBlue">
            <summary>
            Gets a color with an ARGB value of #ff0000cd.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumOrchid">
            <summary>
            Gets a color with an ARGB value of #ffba55d3.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumPurple">
            <summary>
            Gets a color with an ARGB value of #ff9370db.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumSeaGreen">
            <summary>
            Gets a color with an ARGB value of #ff3cb371.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumSlateBlue">
            <summary>
            Gets a color with an ARGB value of #ff7b68ee.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumSpringGreen">
            <summary>
            Gets a color with an ARGB value of #ff00fa9a.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumTurquoise">
            <summary>
            Gets a color with an ARGB value of #ff48d1cc.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MediumVioletRed">
            <summary>
            Gets a color with an ARGB value of #ffc71585.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MidnightBlue">
            <summary>
            Gets a color with an ARGB value of #ff191970.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MintCream">
            <summary>
            Gets a color with an ARGB value of #fff5fffa.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.MistyRose">
            <summary>
            Gets a color with an ARGB value of #ffffe4e1.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Moccasin">
            <summary>
            Gets a color with an ARGB value of #ffffe4b5.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.NavajoWhite">
            <summary>
            Gets a color with an ARGB value of #ffffdead.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Navy">
            <summary>
            Gets a color with an ARGB value of #ff000080.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.OldLace">
            <summary>
            Gets a color with an ARGB value of #fffdf5e6.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Olive">
            <summary>
            Gets a color with an ARGB value of #ff808000.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.OliveDrab">
            <summary>
            Gets a color with an ARGB value of #ff6b8e23.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Orange">
            <summary>
            Gets a color with an ARGB value of #ffffa500.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.OrangeRed">
            <summary>
            Gets a color with an ARGB value of #ffff4500.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Orchid">
            <summary>
            Gets a color with an ARGB value of #ffda70d6.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.PaleGoldenrod">
            <summary>
            Gets a color with an ARGB value of #ffeee8aa.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.PaleGreen">
            <summary>
            Gets a color with an ARGB value of #ff98fb98.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.PaleTurquoise">
            <summary>
            Gets a color with an ARGB value of #ffafeeee.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.PaleVioletRed">
            <summary>
            Gets a color with an ARGB value of #ffdb7093.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.PapayaWhip">
            <summary>
            Gets a color with an ARGB value of #ffffefd5.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.PeachPuff">
            <summary>
            Gets a color with an ARGB value of #ffffdab9.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Peru">
            <summary>
            Gets a color with an ARGB value of #ffcd853f.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Pink">
            <summary>
            Gets a color with an ARGB value of #ffffc0cb.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Plum">
            <summary>
            Gets a color with an ARGB value of #ffdda0dd.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.PowderBlue">
            <summary>
            Gets a color with an ARGB value of #ffb0e0e6.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Purple">
            <summary>
            Gets a color with an ARGB value of #ff800080.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Red">
            <summary>
            Gets a color with an ARGB value of #ffff0000.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.RosyBrown">
            <summary>
            Gets a color with an ARGB value of #ffbc8f8f.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.RoyalBlue">
            <summary>
            Gets a color with an ARGB value of #ff4169e1.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SaddleBrown">
            <summary>
            Gets a color with an ARGB value of #ff8b4513.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Salmon">
            <summary>
            Gets a color with an ARGB value of #fffa8072.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SandyBrown">
            <summary>
            Gets a color with an ARGB value of #fff4a460.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SeaGreen">
            <summary>
            Gets a color with an ARGB value of #ff2e8b57.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SeaShell">
            <summary>
            Gets a color with an ARGB value of #fffff5ee.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Sienna">
            <summary>
            Gets a color with an ARGB value of #ffa0522d.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Silver">
            <summary>
            Gets a color with an ARGB value of #ffc0c0c0.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SkyBlue">
            <summary>
            Gets a color with an ARGB value of #ff87ceeb.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SlateBlue">
            <summary>
            Gets a color with an ARGB value of #ff6a5acd.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SlateGray">
            <summary>
            Gets a color with an ARGB value of #ff708090.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Snow">
            <summary>
            Gets a color with an ARGB value of #fffffafa.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SpringGreen">
            <summary>
            Gets a color with an ARGB value of #ff00ff7f.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.SteelBlue">
            <summary>
            Gets a color with an ARGB value of #ff4682b4.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Tan">
            <summary>
            Gets a color with an ARGB value of #ffd2b48c.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Teal">
            <summary>
            Gets a color with an ARGB value of #ff008080.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Thistle">
            <summary>
            Gets a color with an ARGB value of #ffd8bfd8.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Tomato">
            <summary>
            Gets a color with an ARGB value of #ffff6347.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Transparent">
            <summary>
            Gets a color with an ARGB value of #00ffffff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Turquoise">
            <summary>
            Gets a color with an ARGB value of #ff40e0d0.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Violet">
            <summary>
            Gets a color with an ARGB value of #ffee82ee.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Wheat">
            <summary>
            Gets a color with an ARGB value of #fff5deb3.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.White">
            <summary>
            Gets a color with an ARGB value of #ffffffff.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.WhiteSmoke">
            <summary>
            Gets a color with an ARGB value of #fff5f5f5.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.Yellow">
            <summary>
            Gets a color with an ARGB value of #ffffff00.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Colors.YellowGreen">
            <summary>
            Gets a color with an ARGB value of #ff9acd32.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TransformGroup.ChildrenProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TransformGroup.Children"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TransformGroup.Children">
            <summary>
            Gets or sets the children.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="P:Avalonia.Media.TransformGroup.Value">
            <summary>
            Gets the tranform's <see cref="T:Avalonia.Matrix" />.
            </summary>
        </member>
        <member name="P:Avalonia.Media.DashStyle.Dashes">
            <summary>
            Gets and sets the length of alternating dashes and gaps.
            </summary>
        </member>
        <member name="P:Avalonia.Media.DrawingContext.CurrentTransform">
            <summary>
            Gets the current transform of the drawing context.
            </summary>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.DrawImage(Avalonia.Media.Imaging.IBitmap,System.Double,Avalonia.Rect,Avalonia.Rect)">
            <summary>
            Draws a bitmap image.
            </summary>
            <param name="source">The bitmap image.</param>
            <param name="opacity">The opacity to draw with.</param>
            <param name="sourceRect">The rect in the image to draw.</param>
            <param name="destRect">The rect in the output to draw to.</param>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.DrawLine(Avalonia.Media.Pen,Avalonia.Point,Avalonia.Point)">
            <summary>
            Draws a line.
            </summary>
            <param name="pen">The stroke pen.</param>
            <param name="p1">The first point of the line.</param>
            <param name="p2">The second point of the line.</param>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.DrawGeometry(Avalonia.Media.IBrush,Avalonia.Media.Pen,Avalonia.Media.Geometry)">
            <summary>
            Draws a geometry.
            </summary>
            <param name="brush">The fill brush.</param>
            <param name="pen">The stroke pen.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.DrawRectangle(Avalonia.Media.Pen,Avalonia.Rect,System.Single)">
            <summary>
            Draws the outline of a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rect">The rectangle bounds.</param>
            <param name="cornerRadius">The corner radius.</param>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.DrawText(Avalonia.Media.IBrush,Avalonia.Point,Avalonia.Media.FormattedText)">
            <summary>
            Draws text.
            </summary>
            <param name="foreground">The foreground brush.</param>
            <param name="origin">The upper-left corner of the text.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.FillRectangle(Avalonia.Media.IBrush,Avalonia.Rect,System.Single)">
            <summary>
            Draws a filled rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rect">The rectangle bounds.</param>
            <param name="cornerRadius">The corner radius.</param>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.PushClip(Avalonia.Rect)">
            <summary>
            Pushes a clip rectange.
            </summary>
            <param name="clip">The clip rectangle.</param>
            <returns>A disposable used to undo the clip rectangle.</returns>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.PushOpacity(System.Double)">
            <summary>
            Pushes an opacity value.
            </summary>
            <param name="opacity">The opacity.</param>
            <returns>A disposable used to undo the opacity.</returns>
        </member>
        <member name="M:Avalonia.Media.DrawingContext.PushPostTransform(Avalonia.Matrix)">
            <summary>
            Pushes a matrix transformation.
            </summary>
            <param name="matrix">The matrix</param>
            <returns>A disposable used to undo the transformation.</returns>
        </member>
        <member name="T:Avalonia.Media.GradientStop">
            <summary>
            GradientStop
            </summary>
        </member>
        <member name="M:Avalonia.Media.GradientStop.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.GradientStop"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Media.GradientStop.#ctor(Avalonia.Media.Color,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.GradientStop"/> class.
            </summary>
            <param name="color">The color</param>
            <param name="offset">The offset</param>
        </member>
        <member name="P:Avalonia.Media.GradientStop.Offset">
            <summary>
            The offset
            </summary>
        </member>
        <member name="P:Avalonia.Media.GradientStop.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="T:Avalonia.Media.IBrush">
            <summary>
            Describes how an area is painted.
            </summary>
        </member>
        <member name="P:Avalonia.Media.IBrush.Opacity">
            <summary>
            Gets the opacity of the brush.
            </summary>
        </member>
        <member name="T:Avalonia.Media.ISolidColorBrush">
            <summary>
            Fills an area with a solid color.
            </summary>
        </member>
        <member name="P:Avalonia.Media.ISolidColorBrush.Color">
            <summary>
            Gets the color of the brush.
            </summary>
        </member>
        <member name="T:Avalonia.Media.LineGeometry">
            <summary>
            Represents the geometry of a line.
            </summary>
        </member>
        <member name="M:Avalonia.Media.LineGeometry.#ctor(Avalonia.Point,Avalonia.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.LineGeometry"/> class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Avalonia.Media.LineGeometry.Clone">
            <inheritdoc/>
        </member>
        <member name="F:Avalonia.Media.LineSegment.PointProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.LineSegment.Point"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.LineSegment.Point">
            <summary>
            Gets or sets the point.
            </summary>
            <value>
            The point.
            </value>
        </member>
        <member name="T:Avalonia.Media.Mutable.SolidColorBrush">
            <summary>
            Fills an area with a solid color.
            </summary>
            <remarks>
            This is a mutable version of the normal immutable <see cref="T:Avalonia.Media.SolidColorBrush"/>
            for use in XAML. XAML really needs support for immutable data...
            </remarks>
        </member>
        <member name="P:Avalonia.Media.Mutable.SolidColorBrush.Color">
            <summary>
            Gets the color of the brush.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Mutable.SolidColorBrush.ToString">
            <summary>
            Returns a string representation of the brush.
            </summary>
            <returns>A string representation of the brush.</returns>
        </member>
        <member name="F:Avalonia.Media.PathFigure.IsClosedProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.PathFigure.IsClosed"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.PathFigure.IsFilledProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.PathFigure.IsFilled"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.PathFigure.SegmentsProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.PathFigure.Segments"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.PathFigure.StartPointProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.PathFigure.StartPoint"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.PathFigure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.PathFigure"/> class.
            </summary>
        </member>
        <member name="P:Avalonia.Media.PathFigure.IsClosed">
            <summary>
            Gets or sets a value indicating whether this instance is closed.
            </summary>
            <value>
              <c>true</c> if this instance is closed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Avalonia.Media.PathFigure.IsFilled">
            <summary>
            Gets or sets a value indicating whether this instance is filled.
            </summary>
            <value>
              <c>true</c> if this instance is filled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Avalonia.Media.PathFigure.Segments">
            <summary>
            Gets or sets the segments.
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Avalonia.Media.PathFigure.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
            <value>
            The start point.
            </value>
        </member>
        <member name="F:Avalonia.Media.PathGeometry.FiguresProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.PathGeometry.Figures"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.PathGeometry.FillRuleProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.PathGeometry.FillRule"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.PathGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.PathGeometry"/> class.
            </summary>
        </member>
        <member name="P:Avalonia.Media.PathGeometry.Figures">
            <summary>
            Gets or sets the figures.
            </summary>
            <value>
            The figures.
            </value>
        </member>
        <member name="P:Avalonia.Media.PathGeometry.FillRule">
            <summary>
            Gets or sets the fill rule.
            </summary>
            <value>
            The fill rule.
            </value>
        </member>
        <member name="T:Avalonia.Media.PolylineGeometry">
            <summary>
            Represents the geometry of an polyline or polygon.
            </summary>
        </member>
        <member name="M:Avalonia.Media.PolylineGeometry.Clone">
            <inheritdoc/>
        </member>
        <member name="F:Avalonia.Media.QuadraticBezierSegment.Point1Property">
            <summary>
            Defines the <see cref="P:Avalonia.Media.QuadraticBezierSegment.Point1"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.QuadraticBezierSegment.Point2Property">
            <summary>
            Defines the <see cref="P:Avalonia.Media.QuadraticBezierSegment.Point2"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.QuadraticBezierSegment.Point1">
            <summary>
            Gets or sets the point1.
            </summary>
            <value>
            The point1.
            </value>
        </member>
        <member name="P:Avalonia.Media.QuadraticBezierSegment.Point2">
            <summary>
            Gets or sets the point2.
            </summary>
            <value>
            The point2.
            </value>
        </member>
        <member name="T:Avalonia.Media.RadialGradientBrush">
            <summary>
            Paints an area with a radial gradient. A focal point defines the beginning of the gradient, 
            and a circle defines the end point of the gradient.
            </summary>
        </member>
        <member name="F:Avalonia.Media.RadialGradientBrush.CenterProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.RadialGradientBrush.Center"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.RadialGradientBrush.GradientOriginProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.RadialGradientBrush.GradientOrigin"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.RadialGradientBrush.RadiusProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.RadialGradientBrush.Radius"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.RadialGradientBrush.Center">
            <summary>
            Gets or sets the start point for the gradient.
            </summary>
        </member>
        <member name="P:Avalonia.Media.RadialGradientBrush.GradientOrigin">
            <summary>
            Gets or sets the location of the two-dimensional focal point that defines the beginning of the gradient.
            </summary>
        </member>
        <member name="P:Avalonia.Media.RadialGradientBrush.Radius">
            <summary>
            Gets or sets the horizontal and vertical radius of the outermost circle of the radial gradient.
            </summary>
        </member>
        <member name="T:Avalonia.Media.LinearGradientBrush">
            <summary>
            A brush that draws with a linear gradient.
            </summary>
        </member>
        <member name="F:Avalonia.Media.LinearGradientBrush.StartPointProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.LinearGradientBrush.StartPoint"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.LinearGradientBrush.EndPointProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.LinearGradientBrush.EndPoint"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.LinearGradientBrush.StartPoint">
            <summary>
            Gets or sets the start point for the gradient.
            </summary>
        </member>
        <member name="P:Avalonia.Media.LinearGradientBrush.EndPoint">
            <summary>
            Gets or sets the end point for the gradient.
            </summary>
        </member>
        <member name="T:Avalonia.Media.MediaExtensions">
            <summary>
            Provides extension methods for Avalonia media.
            </summary>
        </member>
        <member name="M:Avalonia.Media.MediaExtensions.CalculateScaling(Avalonia.Media.Stretch,Avalonia.Size,Avalonia.Size)">
            <summary>
            Calculates scaling based on a <see cref="T:Avalonia.Media.Stretch"/> value.
            </summary>
            <param name="stretch">The stretch mode.</param>
            <param name="destinationSize">The size of the destination viewport.</param>
            <param name="sourceSize">The size of the source.</param>
            <returns>A vector with the X and Y scaling factors.</returns>
        </member>
        <member name="M:Avalonia.Media.MediaExtensions.CalculateSize(Avalonia.Media.Stretch,Avalonia.Size,Avalonia.Size)">
            <summary>
            Calculates a scaled size based on a <see cref="T:Avalonia.Media.Stretch"/> value.
            </summary>
            <param name="stretch">The stretch mode.</param>
            <param name="destinationSize">The size of the destination viewport.</param>
            <param name="sourceSize">The size of the source.</param>
            <returns>The size of the stretched source.</returns>
        </member>
        <member name="T:Avalonia.Media.ScaleTransform">
            <summary>
            Scale an <see cref="!:IVisual"/>.
            </summary>
        </member>
        <member name="F:Avalonia.Media.ScaleTransform.ScaleXProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.ScaleTransform.ScaleX"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.ScaleTransform.ScaleYProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.ScaleTransform.ScaleY"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.ScaleTransform.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.ScaleTransform"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Media.ScaleTransform.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.ScaleTransform"/> class.
            </summary>
            <param name="scaleX">ScaleX</param>
            <param name="scaleY">ScaleY</param>
        </member>
        <member name="P:Avalonia.Media.ScaleTransform.ScaleX">
            <summary>
            Gets or sets the ScaleX property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.ScaleTransform.ScaleY">
            <summary>
            Gets or sets the ScaleY property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.ScaleTransform.Value">
            <summary>
            Gets the tranform's <see cref="T:Avalonia.Matrix"/>.
            </summary>
        </member>
        <member name="T:Avalonia.Media.TextAlignment">
            <summary>
            Defines how text is aligned.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TextAlignment.Left">
            <summary>
            The text is left-aligned.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TextAlignment.Center">
            <summary>
            The text is centered.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TextAlignment.Right">
            <summary>
            The text is right-aligned.
            </summary>
        </member>
        <member name="T:Avalonia.Media.FontWeight">
            <summary>
            Defines a set of predefined font weights.
            </summary>
            <remarks>
            As well as the values defined by this enumeration you can also pass any integer value by
            casting it to <see cref="T:Avalonia.Media.FontWeight"/>, e.g. <code>(FontWeight)550</code>.
            </remarks>
        </member>
        <member name="F:Avalonia.Media.FontWeight.Thin">
            <summary>
            Specifies a "thin" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.ExtraLight">
            <summary>
            Specifies an "extra light" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.UltraLight">
            <summary>
            Specifies an "ultra light" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.Light">
            <summary>
            Specifies a "light" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.Normal">
            <summary>
            Specifies a "normal" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.Regular">
            <summary>
            Specifies a "regular" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.Medium">
            <summary>
            Specifies a "medium" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.DemiBold">
            <summary>
            Specifies a "demi-bold" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.SemiBold">
            <summary>
            Specifies a "semi-bold" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.Bold">
            <summary>
            Specifies a "bold" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.ExtraBold">
            <summary>
            Specifies an "extra bold" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.UltraBold">
            <summary>
            Specifies an "ultra bold" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.Black">
            <summary>
            Specifies a "black" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.Heavy">
            <summary>
            Specifies a "heavy" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.ExtraBlack">
            <summary>
            Specifies an "extra black" font weight.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontWeight.UltraBlack">
            <summary>
            Specifies an "ultra black" font weight.
            </summary>
        </member>
        <member name="T:Avalonia.Media.FontStyle">
            <summary>
            Defines the available font styles.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontStyle.Normal">
            <summary>
            A normal font.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontStyle.Oblique">
            <summary>
            An oblique font.
            </summary>
        </member>
        <member name="F:Avalonia.Media.FontStyle.Italic">
            <summary>
            An italic font.
            </summary>
        </member>
        <member name="T:Avalonia.Media.FormattedTextLine">
            <summary>
            Stores information about a line of <see cref="T:Avalonia.Media.FormattedText"/>.
            </summary>
        </member>
        <member name="M:Avalonia.Media.FormattedTextLine.#ctor(System.Int32,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.FormattedTextLine"/> class.
            </summary>
            <param name="length">The length of the line, in characters.</param>
            <param name="height">The height of the line, in pixels.</param>
        </member>
        <member name="P:Avalonia.Media.FormattedTextLine.Length">
            <summary>
            Gets the length of the line, in characters.
            </summary>
        </member>
        <member name="P:Avalonia.Media.FormattedTextLine.Height">
            <summary>
            Gets the height of the line, in pixels.
            </summary>
        </member>
        <member name="T:Avalonia.Media.FormattedText">
            <summary>
            Represents a piece of text with formatting.
            </summary>
        </member>
        <member name="M:Avalonia.Media.FormattedText.#ctor(System.String,System.String,System.Double,Avalonia.Media.FontStyle,Avalonia.Media.TextAlignment,Avalonia.Media.FontWeight)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.FormattedText"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="fontFamilyName">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontStyle">The font style.</param>
            <param name="textAlignment">The text alignment.</param>
            <param name="fontWeight">The font weight.</param>
        </member>
        <member name="P:Avalonia.Media.FormattedText.Constraint">
            <summary>
            Gets or sets the constraint of the text.
            </summary>
        </member>
        <member name="P:Avalonia.Media.FormattedText.FontFamilyName">
            <summary>
            Gets the font family.
            </summary>
        </member>
        <member name="P:Avalonia.Media.FormattedText.FontSize">
            <summary>
            Gets the font size.
            </summary>
        </member>
        <member name="P:Avalonia.Media.FormattedText.FontStyle">
            <summary>
            Gets the font style.
            </summary>
        </member>
        <member name="P:Avalonia.Media.FormattedText.FontWeight">
            <summary>
            Gets the font weight.
            </summary>
        </member>
        <member name="P:Avalonia.Media.FormattedText.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="P:Avalonia.Media.FormattedText.PlatformImpl">
            <summary>
            Gets platform-specific platform implementation.
            </summary>
        </member>
        <member name="P:Avalonia.Media.FormattedText.TextAlignment">
            <summary>
            Gets the text alignment.
            </summary>
        </member>
        <member name="M:Avalonia.Media.FormattedText.DoDispose">
            <summary>
            Disposes of unmanaged resources associated with the formatted text.
            </summary>
        </member>
        <member name="M:Avalonia.Media.FormattedText.GetLines">
            <summary>
            Gets the lines in the text.
            </summary>
            <returns>
            A collection of <see cref="T:Avalonia.Media.FormattedTextLine"/> objects.
            </returns>
        </member>
        <member name="M:Avalonia.Media.FormattedText.HitTestPoint(Avalonia.Point)">
            <summary>
            Hit tests a point in the text.
            </summary>
            <param name="point">The point.</param>
            <returns>
            A <see cref="T:Avalonia.Media.TextHitTestResult"/> describing the result of the hit test.
            </returns>
        </member>
        <member name="M:Avalonia.Media.FormattedText.HitTestTextPosition(System.Int32)">
            <summary>
            Gets the bounds rectangle that the specified character occupies.
            </summary>
            <param name="index">The index of the character.</param>
            <returns>The character bounds.</returns>
        </member>
        <member name="M:Avalonia.Media.FormattedText.HitTestTextRange(System.Int32,System.Int32)">
            <summary>
            Gets the bounds rectangles that the specified text range occupies.
            </summary>
            <param name="index">The index of the first character.</param>
            <param name="length">The number of characters in the text range.</param>
            <returns>The character bounds.</returns>
        </member>
        <member name="M:Avalonia.Media.FormattedText.Measure">
            <summary>
            Gets the size of the text, taking <see cref="P:Avalonia.Media.FormattedText.Constraint"/> into account.
            </summary>
            <returns>The bounds box of the text.</returns>
        </member>
        <member name="M:Avalonia.Media.FormattedText.SetForegroundBrush(Avalonia.Media.IBrush,System.Int32,System.Int32)">
            <summary>
            Sets the foreground brush for the specified text range.
            </summary>
            <param name="brush">The brush.</param>
            <param name="startIndex">The start of the text range.</param>
            <param name="length">The length of the text range.</param>
        </member>
        <member name="T:Avalonia.Media.Geometry">
            <summary>
            Defines a geometric shape.
            </summary>    
        </member>
        <member name="F:Avalonia.Media.Geometry.TransformProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.Geometry.Transform"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Geometry.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Avalonia.Media.Geometry"/> class.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Geometry.Bounds">
            <summary>
            Gets the geometry's bounding rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Geometry.PlatformImpl">
            <summary>
            Gets the platform-specific implementation of the geometry.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Geometry.Transform">
            <summary>
            Gets or sets a transform to apply to the geometry.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Geometry.Clone">
            <summary>
            Clones the geometry.
            </summary>
            <returns>A cloned geometry.</returns>
        </member>
        <member name="M:Avalonia.Media.Geometry.GetRenderBounds(System.Double)">
            <summary>
            Gets the geometry's bounding rectangle with the specified stroke thickness.
            </summary>
            <param name="strokeThickness">The stroke thickness.</param>
            <returns>The bounding rectangle.</returns>
        </member>
        <member name="T:Avalonia.Media.IDrawingContextImpl">
            <summary>
            Defines the interface through which drawing occurs.
            </summary>
        </member>
        <member name="P:Avalonia.Media.IDrawingContextImpl.Transform">
            <summary>
            Gets or sets the current transform of the drawing context.
            </summary>
        </member>
        <member name="M:Avalonia.Media.IDrawingContextImpl.DrawImage(Avalonia.Media.Imaging.IBitmap,System.Double,Avalonia.Rect,Avalonia.Rect)">
            <summary>
            Draws a bitmap image.
            </summary>
            <param name="source">The bitmap image.</param>
            <param name="opacity">The opacity to draw with.</param>
            <param name="sourceRect">The rect in the image to draw.</param>
            <param name="destRect">The rect in the output to draw to.</param>
        </member>
        <member name="M:Avalonia.Media.IDrawingContextImpl.DrawLine(Avalonia.Media.Pen,Avalonia.Point,Avalonia.Point)">
            <summary>
            Draws a line.
            </summary>
            <param name="pen">The stroke pen.</param>
            <param name="p1">The first point of the line.</param>
            <param name="p2">The second point of the line.</param>
        </member>
        <member name="M:Avalonia.Media.IDrawingContextImpl.DrawGeometry(Avalonia.Media.IBrush,Avalonia.Media.Pen,Avalonia.Media.Geometry)">
            <summary>
            Draws a geometry.
            </summary>
            <param name="brush">The fill brush.</param>
            <param name="pen">The stroke pen.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:Avalonia.Media.IDrawingContextImpl.DrawRectangle(Avalonia.Media.Pen,Avalonia.Rect,System.Single)">
            <summary>
            Draws the outline of a rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rect">The rectangle bounds.</param>
            <param name="cornerRadius">The corner radius.</param>
        </member>
        <member name="M:Avalonia.Media.IDrawingContextImpl.DrawText(Avalonia.Media.IBrush,Avalonia.Point,Avalonia.Media.FormattedText)">
            <summary>
            Draws text.
            </summary>
            <param name="foreground">The foreground brush.</param>
            <param name="origin">The upper-left corner of the text.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Avalonia.Media.IDrawingContextImpl.FillRectangle(Avalonia.Media.IBrush,Avalonia.Rect,System.Single)">
            <summary>
            Draws a filled rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rect">The rectangle bounds.</param>
            <param name="cornerRadius">The corner radius.</param>
        </member>
        <member name="M:Avalonia.Media.IDrawingContextImpl.PushClip(Avalonia.Rect)">
            <summary>
            Pushes a clip rectange.
            </summary>
            <param name="clip">The clip rectangle.</param>
            <returns>A disposable used to undo the clip rectangle.</returns>
        </member>
        <member name="M:Avalonia.Media.IDrawingContextImpl.PushOpacity(System.Double)">
            <summary>
            Pushes an opacity value.
            </summary>
            <param name="opacity">The opacity.</param>
            <returns>A disposable used to undo the opacity.</returns>
        </member>
        <member name="T:Avalonia.Media.Imaging.Bitmap">
            <summary>
            Holds a bitmap image.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Imaging.Bitmap.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.Imaging.Bitmap"/> class.
            </summary>
            <param name="fileName">The filename of the bitmap.</param>
        </member>
        <member name="M:Avalonia.Media.Imaging.Bitmap.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.Imaging.Bitmap"/> class.
            </summary>
            <param name="stream">The stream to read the bitmap from.</param>
        </member>
        <member name="M:Avalonia.Media.Imaging.Bitmap.#ctor(Avalonia.Platform.IBitmapImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.Imaging.Bitmap"/> class.
            </summary>
            <param name="impl">A platform-specific bitmap implementation.</param>
        </member>
        <member name="P:Avalonia.Media.Imaging.Bitmap.PixelWidth">
            <summary>
            Gets the width of the bitmap, in pixels.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Imaging.Bitmap.PixelHeight">
            <summary>
            Gets the height of the bitmap, in pixels.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Imaging.Bitmap.PlatformImpl">
            <summary>
            Gets the platform-specific bitmap implementation.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Imaging.Bitmap.Save(System.String)">
            <summary>
            Saves the bitmap to a file.
            </summary>
            <param name="fileName">The filename.</param>
        </member>
        <member name="T:Avalonia.Media.Imaging.IBitmap">
            <summary>
            Represents a bitmap image.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Imaging.IBitmap.PixelWidth">
            <summary>
            Gets the width of the bitmap, in pixels.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Imaging.IBitmap.PixelHeight">
            <summary>
            Gets the height of the bitmap, in pixels.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Imaging.IBitmap.PlatformImpl">
            <summary>
            Gets the platform-specific bitmap implementation.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Imaging.IBitmap.Save(System.String)">
            <summary>
            Saves the bitmap to a file.
            </summary>
            <param name="fileName">The filename.</param>
        </member>
        <member name="T:Avalonia.Media.Imaging.RenderTargetBitmap">
            <summary>
            A bitmap that holds the rendering of a <see cref="!:IVisual"/>.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Imaging.RenderTargetBitmap.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.Imaging.RenderTargetBitmap"/> class.
            </summary>
            <param name="width">The width of the bitmap.</param>
            <param name="height">The height of the bitmap.</param>
        </member>
        <member name="P:Avalonia.Media.Imaging.RenderTargetBitmap.PlatformImpl">
            <summary>
            Gets the platform-specific bitmap implementation.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Imaging.RenderTargetBitmap.Dispose">
            <summary>
            Disposes of the bitmap.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Imaging.RenderTargetBitmap.CreateImpl(System.Int32,System.Int32)">
            <summary>
            Creates a platform-specific imlementation for a <see cref="T:Avalonia.Media.Imaging.RenderTargetBitmap"/>.
            </summary>
            <param name="width">The width of the bitmap.</param>
            <param name="height">The height of the bitmap.</param>
            <returns>The platform-specific implementation.</returns>
        </member>
        <member name="T:Avalonia.Media.TranslateTransform">
            <summary>
            Translates (moves) an <see cref="!:IVisual"/>.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TranslateTransform.XProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TranslateTransform.X"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TranslateTransform.YProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TranslateTransform.Y"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.TranslateTransform.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.TranslateTransform"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Media.TranslateTransform.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.TranslateTransform"/> class.
            </summary>
            <param name="x">Gets the horizontal offset of the translate.</param>
            <param name="y">Gets the vertical offset of the translate.</param>
        </member>
        <member name="P:Avalonia.Media.TranslateTransform.X">
            <summary>
            Gets the horizontal offset of the translate.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TranslateTransform.Y">
            <summary>
            Gets the vertical offset of the translate.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TranslateTransform.Value">
            <summary>
            Gets the tranform's <see cref="T:Avalonia.Matrix"/>.
            </summary>
        </member>
        <member name="T:Avalonia.Media.PathMarkupParser">
            <summary>
            Parses a path markup string.
            </summary>
        </member>
        <member name="M:Avalonia.Media.PathMarkupParser.#ctor(Avalonia.Media.StreamGeometry,Avalonia.Media.StreamGeometryContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.PathMarkupParser"/> class.
            </summary>
            <param name="geometry">The geometry in which the path should be stored.</param>
            <param name="context">The context for <paramref name="geometry"/>.</param>
        </member>
        <member name="T:Avalonia.Media.PathMarkupParser.Command">
            <summary>
            Defines the command currently being processed.
            </summary>
        </member>
        <member name="M:Avalonia.Media.PathMarkupParser.Parse(System.String)">
            <summary>
            Parses the specified markup string.
            </summary>
            <param name="s">The markup string.</param>
        </member>
        <member name="T:Avalonia.Media.Pen">
            <summary>
            Describes how a stroke is drawn.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Pen.#ctor(Avalonia.Media.IBrush,System.Double,Avalonia.Media.DashStyle,Avalonia.Media.PenLineCap,Avalonia.Media.PenLineCap,Avalonia.Media.PenLineCap,Avalonia.Media.PenLineJoin,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.Pen"/> class.
            </summary>
            <param name="brush">The brush used to draw.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="dashStyle">The dash style.</param>
            <param name="dashCap">The dash cap.</param>
            <param name="startLineCap">The start line cap.</param>
            <param name="endLineCap">The end line cap.</param>
            <param name="lineJoin">The line join.</param>
            <param name="miterLimit">The miter limit.</param>
        </member>
        <member name="M:Avalonia.Media.Pen.#ctor(System.UInt32,System.Double,Avalonia.Media.DashStyle,Avalonia.Media.PenLineCap,Avalonia.Media.PenLineCap,Avalonia.Media.PenLineCap,Avalonia.Media.PenLineJoin,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.Pen"/> class.
            </summary>
            <param name="color">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="dashStyle">The dash style.</param>
            <param name="dashCap">The dash cap.</param>
            <param name="startLineCap">The start line cap.</param>
            <param name="endLineCap">The end line cap.</param>
            <param name="lineJoin">The line join.</param>
            <param name="miterLimit">The miter limit.</param>
        </member>
        <member name="P:Avalonia.Media.Pen.Brush">
            <summary>
            Gets the brush used to draw the stroke.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Pen.Thickness">
            <summary>
            Gets the stroke thickness.
            </summary>
        </member>
        <member name="T:Avalonia.Media.EllipseGeometry">
            <summary>
            Represents the geometry of an ellipse or circle.
            </summary>
        </member>
        <member name="M:Avalonia.Media.EllipseGeometry.#ctor(Avalonia.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.EllipseGeometry"/> class.
            </summary>
            <param name="rect">The rectangle that the ellipse should fill.</param>
        </member>
        <member name="M:Avalonia.Media.EllipseGeometry.Clone">
            <inheritdoc/>
        </member>
        <member name="T:Avalonia.Media.RectangleGeometry">
            <summary>
            Represents the geometry of a rectangle.
            </summary>
        </member>
        <member name="M:Avalonia.Media.RectangleGeometry.#ctor(Avalonia.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.RectangleGeometry"/> class.
            </summary>
            <param name="rect">The rectangle bounds.</param>
        </member>
        <member name="M:Avalonia.Media.RectangleGeometry.Clone">
            <inheritdoc/>
        </member>
        <member name="T:Avalonia.Media.MatrixTransform">
            <summary>
            Transforms an <see cref="!:IVisual"/> according to a <see cref="P:Avalonia.Media.MatrixTransform.Matrix"/>.
            </summary>
        </member>
        <member name="F:Avalonia.Media.MatrixTransform.MatrixProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.MatrixTransform.Matrix"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.MatrixTransform.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.MatrixTransform"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Media.MatrixTransform.#ctor(Avalonia.Matrix)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.MatrixTransform"/> class.
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="P:Avalonia.Media.MatrixTransform.Matrix">
            <summary>
            Gets or sets the matrix.
            </summary>
        </member>
        <member name="P:Avalonia.Media.MatrixTransform.Value">
            <summary>
            Gets the matrix.
            </summary>
        </member>
        <member name="T:Avalonia.Media.RotateTransform">
            <summary>
            Rotates an <see cref="!:IVisual"/>.
            </summary>
        </member>
        <member name="F:Avalonia.Media.RotateTransform.AngleProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.RotateTransform.Angle"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.RotateTransform.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.RotateTransform"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Media.RotateTransform.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.RotateTransform"/> class.
            </summary>
            <param name="angle">The angle, in degrees.</param>
        </member>
        <member name="P:Avalonia.Media.RotateTransform.Angle">
            <summary>
            Gets or sets the angle of rotation, in degrees.
            </summary>
        </member>
        <member name="P:Avalonia.Media.RotateTransform.Value">
            <summary>
            Gets the tranform's <see cref="T:Avalonia.Matrix"/>.
            </summary>
        </member>
        <member name="T:Avalonia.Media.SolidColorBrush">
            <summary>
            Fills an area with a solid color.
            </summary>
        </member>
        <member name="M:Avalonia.Media.SolidColorBrush.#ctor(Avalonia.Media.Color,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.SolidColorBrush"/> class.
            </summary>
            <param name="color">The color to use.</param>
            <param name="opacity">The opacity of the brush.</param>
        </member>
        <member name="M:Avalonia.Media.SolidColorBrush.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.SolidColorBrush"/> class.
            </summary>
            <param name="color">The color to use.</param>
        </member>
        <member name="P:Avalonia.Media.SolidColorBrush.Color">
            <summary>
            Gets the color of the brush.
            </summary>
        </member>
        <member name="P:Avalonia.Media.SolidColorBrush.Opacity">
            <summary>
            Gets the opacity of the brush.
            </summary>
        </member>
        <member name="M:Avalonia.Media.SolidColorBrush.ToString">
            <summary>
            Returns a string representation of the brush.
            </summary>
            <returns>A string representation of the brush.</returns>
        </member>
        <member name="T:Avalonia.Media.StreamGeometry">
            <summary>
            Represents the geometry of an arbitrarily complex shape.
            </summary>
        </member>
        <member name="M:Avalonia.Media.StreamGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.StreamGeometry"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Media.StreamGeometry.#ctor(Avalonia.Platform.IGeometryImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.StreamGeometry"/> class.
            </summary>
            <param name="impl">The platform-specific implementation.</param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometry.Parse(System.String)">
            <summary>
            Creates a <see cref="T:Avalonia.Media.StreamGeometry"/> from a string.
            </summary>
            <param name="s">The string.</param>
            <returns>A <see cref="T:Avalonia.Media.StreamGeometry"/>.</returns>
        </member>
        <member name="M:Avalonia.Media.StreamGeometry.Clone">
            <inheritdoc/>
        </member>
        <member name="M:Avalonia.Media.StreamGeometry.Open">
            <summary>
            Opens the geometry to start defining it.
            </summary>
            <returns>
            A <see cref="T:Avalonia.Media.StreamGeometryContext"/> which can be used to define the geometry.
            </returns>
        </member>
        <member name="T:Avalonia.Media.StreamGeometryContext">
            <summary>
            Describes a geometry using drawing commands.
            </summary>
            <remarks>
            This class is used to define the geometry of a <see cref="T:Avalonia.Media.StreamGeometry"/>. An instance
            of <see cref="T:Avalonia.Media.StreamGeometryContext"/> is obtained by calling
            <see cref="M:Avalonia.Media.StreamGeometry.Open"/>.
            </remarks>
            TODO: This class is just a wrapper around IStreamGeometryContextImpl: is it needed?
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.#ctor(Avalonia.Platform.IStreamGeometryContextImpl)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.StreamGeometryContext"/> class.
            </summary>
            <param name="impl">The platform-specific implementation.</param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.SetFillRule(Avalonia.Media.FillRule)">
            <summary>
            Sets path's winding rule (default is EvenOdd). You should call this method before any calls to BeginFigure. If you wonder why, ask Direct2D guys about their design decisions.
            </summary>
            <param name="fillRule"></param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.ArcTo(Avalonia.Point,Avalonia.Size,System.Double,System.Boolean,Avalonia.Media.SweepDirection)">
            <summary>
            Draws an arc to the specified point.
            </summary>
            <param name="point">The destination point.</param>
            <param name="size">The radii of an oval whose perimeter is used to draw the angle.</param>
            <param name="rotationAngle">The rotation angle of the oval that specifies the curve.</param>
            <param name="isLargeArc">true to draw the arc greater than 180 degrees; otherwise, false.</param>
            <param name="sweepDirection">
            A value that indicates whether the arc is drawn in the Clockwise or Counterclockwise direction.
            </param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.BeginFigure(Avalonia.Point,System.Boolean)">
            <summary>
            Begins a new figure.
            </summary>
            <param name="startPoint">The starting point for the figure.</param>
            <param name="isFilled">Whether the figure is filled.</param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.CubicBezierTo(Avalonia.Point,Avalonia.Point,Avalonia.Point)">
            <summary>
            Draws a Bezier curve to the specified point.
            </summary>
            <param name="point1">The first control point used to specify the shape of the curve.</param>
            <param name="point2">The second control point used to specify the shape of the curve.</param>
            <param name="point3">The destination point for the end of the curve.</param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.QuadraticBezierTo(Avalonia.Point,Avalonia.Point)">
            <summary>
            Draws a quadratic Bezier curve to the specified point
            </summary>
            <param name="control">The control point used to specify the shape of the curve.</param>
            <param name="endPoint">The destination point for the end of the curve.</param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.LineTo(Avalonia.Point)">
            <summary>
            Draws a line to the specified point.
            </summary>
            <param name="point">The destination point.</param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.EndFigure(System.Boolean)">
            <summary>
            Ends the figure started by <see cref="M:Avalonia.Media.StreamGeometryContext.BeginFigure(Avalonia.Point,System.Boolean)"/>.
            </summary>
            <param name="isClosed">Whether the figure is closed.</param>
        </member>
        <member name="M:Avalonia.Media.StreamGeometryContext.Dispose">
            <summary>
            Finishes the drawing session.
            </summary>
        </member>
        <member name="T:Avalonia.Media.Stretch">
            <summary>
            Describes how content is resized to fill its allocated space.
            </summary>
        </member>
        <member name="F:Avalonia.Media.Stretch.None">
            <summary>
            The content preserves its original size.
            </summary>
        </member>
        <member name="F:Avalonia.Media.Stretch.Fill">
            <summary>
            The content is resized to fill the destination dimensions. The aspect ratio is not
            preserved.
            </summary>
        </member>
        <member name="F:Avalonia.Media.Stretch.Uniform">
            <summary>
            The content is resized to fit in the destination dimensions while preserving its
            native aspect ratio.
            </summary>
        </member>
        <member name="F:Avalonia.Media.Stretch.UniformToFill">
            <summary>
            The content is resized to completely fill the destination rectangle while preserving
            its native aspect ratio. A portion of the content may not be visible if the aspect
            ratio of the content does not match the aspect ratio of the allocated space.
            </summary>
        </member>
        <member name="T:Avalonia.Media.SweepDirection">
            <summary>
            Defines the direction an which elliptical arc is drawn.
            </summary>
        </member>
        <member name="F:Avalonia.Media.SweepDirection.CounterClockwise">
            <summary>
            Specifies that arcs are drawn in a counter clockwise (negative-angle) direction.
            </summary>
        </member>
        <member name="F:Avalonia.Media.SweepDirection.Clockwise">
            <summary>
            Specifies that arcs are drawn in a clockwise (positive-angle) direction.
            </summary>
        </member>
        <member name="T:Avalonia.Media.TextHitTestResult">
            <summary>
            Holds a hit test result from a <see cref="T:Avalonia.Media.FormattedText"/>.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TextHitTestResult.IsInside">
            <summary>
            Gets or sets a value indicating whether the point is inside the bounds of the text.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TextHitTestResult.TextPosition">
            <summary>
            Gets the index of the hit character in the text.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TextHitTestResult.IsTrailing">
            <summary>
            Gets a value indicating whether the hit is on the trailing edge of the character.
            </summary>
        </member>
        <member name="T:Avalonia.Media.Transform">
            <summary>
            Represents a transform on an <see cref="!:IVisual"/>.
            </summary>
        </member>
        <member name="E:Avalonia.Media.Transform.Changed">
            <summary>
            Raised when the transform changes.
            </summary>
        </member>
        <member name="P:Avalonia.Media.Transform.Value">
            <summary>
            Gets the tranform's <see cref="T:Avalonia.Matrix"/>.
            </summary>
        </member>
        <member name="M:Avalonia.Media.Transform.RaiseChanged">
            <summary>
            Raises the <see cref="E:Avalonia.Media.Transform.Changed"/> event.
            </summary>
        </member>
        <member name="T:Avalonia.Media.TileMode">
            <summary>
            Describes how a <see cref="T:Avalonia.Media.TileBrush"/> is tiled.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileMode.None">
            <summary>
            A single repeat of the content will be displayed.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileMode.FlipX">
            <summary>
            The content will be repeated horizontally, with alternate tiles mirrored.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileMode.FlipY">
            <summary>
            The content will be repeated vertically, with alternate tiles mirrored.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileMode.FlipXY">
            <summary>
            The content will be repeated horizontally and vertically, with alternate tiles mirrored.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileMode.Tile">
            <summary>
            The content will be repeated.
            </summary>
        </member>
        <member name="T:Avalonia.Media.TileBrush">
            <summary>
            Base class for brushes which display repeating images.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileBrush.AlignmentXProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TileBrush.AlignmentX"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileBrush.AlignmentYProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TileBrush.AlignmentY"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileBrush.DestinationRectProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TileBrush.DestinationRect"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileBrush.SourceRectProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TileBrush.SourceRect"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileBrush.StretchProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TileBrush.Stretch"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Media.TileBrush.TileModeProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.TileBrush.TileMode"/> property.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TileBrush.AlignmentX">
            <summary>
            Gets or sets the horizontal alignment of a tile in the destination.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TileBrush.AlignmentY">
            <summary>
            Gets or sets the horizontal alignment of a tile in the destination.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TileBrush.DestinationRect">
            <summary>
            Gets or sets the rectangle on the destination in which to paint a tile.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TileBrush.SourceRect">
            <summary>
            Gets or sets the rectangle of the source image that will be displayed.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TileBrush.Stretch">
            <summary>
            Gets or sets a value controlling how the source rectangle will be stretched to fill
            the destination rect.
            </summary>
        </member>
        <member name="P:Avalonia.Media.TileBrush.TileMode">
            <summary>
            Gets or sets the brush's tile mode.
            </summary>
        </member>
        <member name="T:Avalonia.Media.ImageBrush">
            <summary>
            Paints an area with an <see cref="T:Avalonia.Media.Imaging.IBitmap"/>.
            </summary>
        </member>
        <member name="F:Avalonia.Media.ImageBrush.SourceProperty">
            <summary>
            Defines the <see cref="T:Avalonia.Visual"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.ImageBrush.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.VisualBrush"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Media.ImageBrush.#ctor(Avalonia.Media.Imaging.IBitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.VisualBrush"/> class.
            </summary>
            <param name="source">The image to draw.</param>
        </member>
        <member name="P:Avalonia.Media.ImageBrush.Source">
            <summary>
            Gets or sets the image to draw.
            </summary>
        </member>
        <member name="T:Avalonia.Media.VisualBrush">
            <summary>
            Paints an area with an <see cref="T:Avalonia.VisualTree.IVisual"/>.
            </summary>
        </member>
        <member name="F:Avalonia.Media.VisualBrush.VisualProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Media.VisualBrush.Visual"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Media.VisualBrush.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.VisualBrush"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Media.VisualBrush.#ctor(Avalonia.VisualTree.IVisual)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Media.VisualBrush"/> class.
            </summary>
            <param name="visual">The visual to draw.</param>
        </member>
        <member name="P:Avalonia.Media.VisualBrush.Visual">
            <summary>
            Gets or sets the visual to draw.
            </summary>
        </member>
        <member name="T:Avalonia.VisualTree.IVisual">
            <summary>
            Represents a node in the visual scene graph.
            </summary>
            <remarks>
            The <see cref="T:Avalonia.VisualTree.IVisual"/> interface defines the interface required for a renderer to
            render a scene graph. You should not usually need to reference this interface unless
            you are writing a renderer; instead use the extension methods defined in
            <see cref="T:Avalonia.VisualTree.VisualExtensions"/> to traverse the scene graph. This interface is
            implemented by <see cref="T:Avalonia.Visual"/>. It should not be necessary to implement it
            anywhere else.
            </remarks>
        </member>
        <member name="E:Avalonia.VisualTree.IVisual.AttachedToVisualTree">
            <summary>
            Raised when the control is attached to a rooted visual tree.
            </summary>
        </member>
        <member name="E:Avalonia.VisualTree.IVisual.DetachedFromVisualTree">
            <summary>
            Raised when the control is detached from a rooted visual tree.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.Bounds">
            <summary>
            Gets the bounds of the scene graph node relative to its parent.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.ClipToBounds">
            <summary>
            Gets a value indicating whether the scene graph node should be clipped to its bounds.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.IsAttachedToVisualTree">
            <summary>
            Gets a value indicating whether this scene graph node is attached to a visual root.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.IsEffectivelyVisible">
            <summary>
            Gets a value indicating whether this scene graph node and all its parents are visible.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.IsVisible">
            <summary>
            Gets or sets a value indicating whether this scene graph node is visible.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.Opacity">
            <summary>
            Gets or sets the opacity of the scene graph node.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.RenderTransform">
            <summary>
            Gets or sets the render transform of the scene graph node.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.TransformOrigin">
            <summary>
            Gets or sets the transform origin of the scene graph node.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.VisualChildren">
            <summary>
            Gets the scene graph node's child nodes.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.VisualParent">
            <summary>
            Gets the scene graph node's parent node.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.VisualRoot">
            <summary>
            Gets the root of the visual tree, if the control is attached to a visual tree.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisual.ZIndex">
            <summary>
            Gets or sets the Z index of the node.
            </summary>
        </member>
        <member name="M:Avalonia.VisualTree.IVisual.InvalidateVisual">
            <summary>
            Invalidates the visual and queues a repaint.
            </summary>
        </member>
        <member name="M:Avalonia.VisualTree.IVisual.Render(Avalonia.Media.DrawingContext)">
            <summary>
            Renders the scene graph node to a <see cref="T:Avalonia.Media.DrawingContext"/>.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Avalonia.VisualTree.IVisual.TransformToVisual(Avalonia.VisualTree.IVisual)">
            <summary>
            Returns a transform that transforms the visual's coordinates into the coordinates
            of the specified <paramref name="visual"/>.
            </summary>
            <param name="visual">The visual to translate the coordinates to.</param>
            <returns>
            A <see cref="T:Avalonia.Matrix"/> containing the transform or null if the visuals don't share a
            common ancestor.
            </returns>
        </member>
        <member name="T:Avalonia.VisualTree.IHostedVisualTreeRoot">
            <summary>
            Interface for controls that are at the root of a hosted visual tree, such as popups.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IHostedVisualTreeRoot.Host">
            <summary>
            Gets the visual tree host.
            </summary>
            <value>
            The visual tree host.
            </value>
        </member>
        <member name="T:Avalonia.VisualTree.IVisualTreeHost">
            <summary>
            Interface for controls that host their own separate visual tree, such as popups.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.IVisualTreeHost.Root">
            <summary>
            Gets the root of the hosted visual tree.
            </summary>
            <value>
            The root of the hosted visual tree.
            </value>
        </member>
        <member name="T:Avalonia.VisualTree.TransformedBounds">
            <summary>
            Holds information about the bounds of a control, together with a transform and a clip/
            </summary>
        </member>
        <member name="M:Avalonia.VisualTree.TransformedBounds.#ctor(Avalonia.Rect,Avalonia.Rect,Avalonia.Matrix)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.VisualTree.TransformedBounds"/> class.
            </summary>
            <param name="bounds">The control's bounds.</param>
            <param name="clip">The control's clip rectangle.</param>
            <param name="transform">The control's transform.</param>
        </member>
        <member name="P:Avalonia.VisualTree.TransformedBounds.Bounds">
            <summary>
            Gets the control's bounds.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.TransformedBounds.Clip">
            <summary>
            Gets the control's clip rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.VisualTree.TransformedBounds.Transform">
            <summary>
            Gets the control's transform.
            </summary>
        </member>
        <member name="T:Avalonia.VisualTree.BoundsTracker">
            <summary>
            Tracks the bounds of a control.
            </summary>
            <remarks>
            This class is used by Adorners to track the control that the adorner is attached to.
            </remarks>
        </member>
        <member name="M:Avalonia.VisualTree.BoundsTracker.Track(Avalonia.Visual)">
            <summary>
            Starts tracking the specified visual.
            </summary>
            <param name="visual">The visual.</param>
            <returns>An observable that returns the tracked bounds.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.BoundsTracker.Track(Avalonia.Visual,Avalonia.Visual)">
            <summary>
            Starts tracking the specified visual relative to another control.
            </summary>
            <param name="visual">The visual.</param>
            <param name="relativeTo">The control that the tracking should be relative to.</param>
            <returns>An observable that returns the tracked bounds.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.BoundsTracker.ExtractBounds(System.Collections.Generic.IList{Avalonia.Rect})">
            <summary>
            Sums a collection of rectangles.
            </summary>
            <param name="rects">The collection of rectangles.</param>
            <returns>The summed rectangle.</returns>
        </member>
        <member name="T:Avalonia.VisualTree.VisualExtensions">
            <summary>
            Provides extension methods for working with the visual tree.
            </summary>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.FindCommonVisualAncestor(Avalonia.VisualTree.IVisual,Avalonia.VisualTree.IVisual)">
            <summary>
            Tries to get the first common ancestor of two visuals.
            </summary>
            <param name="visual">The first visual.</param>
            <param name="target">The second visual.</param>
            <returns>The common ancestor, or null if not found.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetVisualAncestors(Avalonia.VisualTree.IVisual)">
            <summary>
            Enumerates the ancestors of an <see cref="T:Avalonia.VisualTree.IVisual"/> in the visual tree.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The visual's ancestors.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetSelfAndVisualAncestors(Avalonia.VisualTree.IVisual)">
            <summary>
            Enumerates an <see cref="T:Avalonia.VisualTree.IVisual"/> and its ancestors in the visual tree.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The visual and its ancestors.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetVisualAt(Avalonia.VisualTree.IVisual,Avalonia.Point)">
            <summary>
            Gets the first visual in the visual tree whose bounds contain a point.
            </summary>
            <param name="visual">The root visual to test.</param>
            <param name="p">The point.</param>
            <returns>The visuals at the requested point.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetVisualsAt(Avalonia.VisualTree.IVisual,Avalonia.Point)">
            <summary>
            Enumerates the visuals in the visual tree whose bounds contain a point.
            </summary>
            <param name="visual">The root visual to test.</param>
            <param name="p">The point.</param>
            <returns>The visuals at the requested point.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetVisualChildren(Avalonia.VisualTree.IVisual)">
            <summary>
            Enumerates the children of an <see cref="T:Avalonia.VisualTree.IVisual"/> in the visual tree.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The visual children.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetVisualDescendents(Avalonia.VisualTree.IVisual)">
            <summary>
            Enumerates the descendents of an <see cref="T:Avalonia.VisualTree.IVisual"/> in the visual tree.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The visual's ancestors.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetSelfAndVisualDescendents(Avalonia.VisualTree.IVisual)">
            <summary>
            Enumerates an <see cref="T:Avalonia.VisualTree.IVisual"/> and its descendents in the visual tree.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The visual and its ancestors.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetVisualParent(Avalonia.VisualTree.IVisual)">
            <summary>
            Gets the visual parent of an <see cref="T:Avalonia.VisualTree.IVisual"/>.
            </summary>
            <param name="visual">The visual.</param>
            <returns>The parent, or null if the visual is unparented.</returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetVisualParent``1(Avalonia.VisualTree.IVisual)">
            <summary>
            Gets the visual parent of an <see cref="T:Avalonia.VisualTree.IVisual"/>.
            </summary>
            <typeparam name="T">The type of the visual parent.</typeparam>
            <param name="visual">The visual.</param>
            <returns>
            The parent, or null if the visual is unparented or its parent is not of type <typeparamref name="T"/>.
            </returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.GetVisualRoot(Avalonia.VisualTree.IVisual)">
            <summary>
            Gets the root visual for an <see cref="T:Avalonia.VisualTree.IVisual"/>.
            </summary>
            <param name="visual">The visual.</param>
            <returns>
            The root visual or null if the visual is not rooted.
            </returns>
        </member>
        <member name="M:Avalonia.VisualTree.VisualExtensions.IsVisualAncestorOf(Avalonia.VisualTree.IVisual,Avalonia.VisualTree.IVisual)">
            <summary>
            Tests whether an <see cref="T:Avalonia.VisualTree.IVisual"/> is an ancestor of another visual.
            </summary>
            <param name="visual">The visual.</param>
            <param name="target">The potential descendent.</param>
            <returns>
            True if <paramref name="visual"/> is an ancestor of <paramref name="target"/>;
            otherwise false.
            </returns>
        </member>
        <member name="T:Avalonia.Platform.IFormattedTextImpl">
            <summary>
            Defines the platform-specific interface for <see cref="T:Avalonia.Media.FormattedText"/>.
            </summary>
        </member>
        <member name="P:Avalonia.Platform.IFormattedTextImpl.Constraint">
            <summary>
            Gets or sets the constraint of the text.
            </summary>
        </member>
        <member name="M:Avalonia.Platform.IFormattedTextImpl.GetLines">
            <summary>
            Gets the lines in the text.
            </summary>
            <returns>
            A collection of <see cref="T:Avalonia.Media.FormattedTextLine"/> objects.
            </returns>
        </member>
        <member name="M:Avalonia.Platform.IFormattedTextImpl.HitTestPoint(Avalonia.Point)">
            <summary>
            Hit tests a point in the text.
            </summary>
            <param name="point">The point.</param>
            <returns>
            A <see cref="T:Avalonia.Media.TextHitTestResult"/> describing the result of the hit test.
            </returns>
        </member>
        <member name="M:Avalonia.Platform.IFormattedTextImpl.HitTestTextPosition(System.Int32)">
            <summary>
            Gets the bounds rectangle that the specified character occupies.
            </summary>
            <param name="index">The index of the character.</param>
            <returns>The character bounds.</returns>
        </member>
        <member name="M:Avalonia.Platform.IFormattedTextImpl.HitTestTextRange(System.Int32,System.Int32)">
            <summary>
            Gets the bounds rectangles that the specified text range occupies.
            </summary>
            <param name="index">The index of the first character.</param>
            <param name="length">The number of characters in the text range.</param>
            <returns>The character bounds.</returns>
        </member>
        <member name="M:Avalonia.Platform.IFormattedTextImpl.Measure">
            <summary>
            Gets the size of the text, taking <see cref="P:Avalonia.Platform.IFormattedTextImpl.Constraint"/> into account.
            </summary>
            <returns>The bounds box of the text.</returns>
        </member>
        <member name="M:Avalonia.Platform.IFormattedTextImpl.SetForegroundBrush(Avalonia.Media.IBrush,System.Int32,System.Int32)">
            <summary>
            Sets the foreground brush for the specified text range.
            </summary>
            <param name="brush">The brush.</param>
            <param name="startIndex">The start of the text range.</param>
            <param name="length">The length of the text range.</param>
        </member>
        <member name="T:Avalonia.Platform.IBitmapImpl">
            <summary>
            Defines the platform-specific interface for a <see cref="T:Avalonia.Media.Imaging.Bitmap"/>.
            </summary>
        </member>
        <member name="P:Avalonia.Platform.IBitmapImpl.PixelWidth">
            <summary>
            Gets the width of the bitmap, in pixels.
            </summary>
        </member>
        <member name="P:Avalonia.Platform.IBitmapImpl.PixelHeight">
            <summary>
            Gets the height of the bitmap, in pixels.
            </summary>
        </member>
        <member name="M:Avalonia.Platform.IBitmapImpl.Save(System.String)">
            <summary>
            Saves the bitmap to a file.
            </summary>
            <param name="fileName">The filename.</param>
        </member>
        <member name="T:Avalonia.Platform.IGeometryImpl">
            <summary>
            Defines the platform-specific interface for <see cref="T:Avalonia.Media.Geometry"/>.
            </summary>
        </member>
        <member name="P:Avalonia.Platform.IGeometryImpl.Bounds">
            <summary>
            Gets the geometry's bounding rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Platform.IGeometryImpl.Transform">
            <summary>
            Gets or sets a transform to apply to the geometry.
            </summary>
        </member>
        <member name="M:Avalonia.Platform.IGeometryImpl.GetRenderBounds(System.Double)">
            <summary>
            Gets the geometry's bounding rectangle with the specified stroke thickness.
            </summary>
            <param name="strokeThickness">The stroke thickness.</param>
            <returns>The bounding rectangle.</returns>
        </member>
        <member name="T:Avalonia.Platform.IPlatformRenderInterface">
            <summary>
            Defines the main platform-specific interface for the rendering subsystem.
            </summary>
        </member>
        <member name="M:Avalonia.Platform.IPlatformRenderInterface.CreateFormattedText(System.String,System.String,System.Double,Avalonia.Media.FontStyle,Avalonia.Media.TextAlignment,Avalonia.Media.FontWeight)">
            <summary>
            Creates a formatted text implementation.
            </summary>
            <param name="text">The text.</param>
            <param name="fontFamilyName">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontStyle">The font style.</param>
            <param name="textAlignment">The text alignment.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>An <see cref="T:Avalonia.Platform.IFormattedTextImpl"/>.</returns>
        </member>
        <member name="M:Avalonia.Platform.IPlatformRenderInterface.CreateStreamGeometry">
            <summary>
            Creates a stream geometry implementation.
            </summary>
            <returns>An <see cref="T:Avalonia.Platform.IStreamGeometryImpl"/>.</returns>
        </member>
        <member name="M:Avalonia.Platform.IPlatformRenderInterface.CreateRenderer(Avalonia.Platform.IPlatformHandle)">
            <summary>
            Creates a renderer.
            </summary>
            <param name="handle">The platform handle for the renderer.</param>
            <returns>An <see cref="T:Avalonia.Platform.IRenderTarget"/>.</returns>
        </member>
        <member name="M:Avalonia.Platform.IPlatformRenderInterface.CreateRenderTargetBitmap(System.Int32,System.Int32)">
            <summary>
            Creates a render target bitmap implementation.
            </summary>
            <param name="width">The width of the bitmap.</param>
            <param name="height">The height of the bitmap.</param>
            <returns>An <see cref="T:Avalonia.Platform.IRenderTargetBitmapImpl"/>.</returns>
        </member>
        <member name="M:Avalonia.Platform.IPlatformRenderInterface.LoadBitmap(System.String)">
            <summary>
            Loads a bitmap implementation from a file..
            </summary>
            <param name="fileName">The filename of the bitmap.</param>
            <returns>An <see cref="T:Avalonia.Platform.IBitmapImpl"/>.</returns>
        </member>
        <member name="M:Avalonia.Platform.IPlatformRenderInterface.LoadBitmap(System.IO.Stream)">
            <summary>
            Loads a bitmap implementation from a file..
            </summary>
            <param name="stream">The stream to read the bitmap from.</param>
            <returns>An <see cref="T:Avalonia.Platform.IBitmapImpl"/>.</returns>
        </member>
        <member name="T:Avalonia.Platform.IRenderTarget">
            <summary>
            Defines a render target
            </summary>
            <remarks>
            The interface used for obtaining drawing context from surfaces you can render on.
            </remarks>
        </member>
        <member name="M:Avalonia.Platform.IRenderTarget.CreateDrawingContext">
            <summary>
            Creates an <see cref="T:Avalonia.Media.DrawingContext"/> for a rendering session.
            </summary>
        </member>
        <member name="T:Avalonia.Platform.IRenderTargetBitmapImpl">
            <summary>
            Defines the platform-specific interface for a
            <see cref="T:Avalonia.Media.Imaging.RenderTargetBitmap"/>.
            </summary>
        </member>
        <member name="T:Avalonia.Platform.IStreamGeometryContextImpl">
            <summary>
            Describes a geometry using drawing commands.
            </summary>
        </member>
        <member name="M:Avalonia.Platform.IStreamGeometryContextImpl.ArcTo(Avalonia.Point,Avalonia.Size,System.Double,System.Boolean,Avalonia.Media.SweepDirection)">
            <summary>
            Draws an arc to the specified point.
            </summary>
            <param name="point">The destination point.</param>
            <param name="size">The radii of an oval whose perimeter is used to draw the angle.</param>
            <param name="rotationAngle">The rotation angle of the oval that specifies the curve.</param>
            <param name="isLargeArc">true to draw the arc greater than 180 degrees; otherwise, false.</param>
            <param name="sweepDirection">
            A value that indicates whether the arc is drawn in the Clockwise or Counterclockwise direction.
            </param>
        </member>
        <member name="M:Avalonia.Platform.IStreamGeometryContextImpl.BeginFigure(Avalonia.Point,System.Boolean)">
            <summary>
            Begins a new figure.
            </summary>
            <param name="startPoint">The starting point for the figure.</param>
            <param name="isFilled">Whether the figure is filled.</param>
        </member>
        <member name="M:Avalonia.Platform.IStreamGeometryContextImpl.CubicBezierTo(Avalonia.Point,Avalonia.Point,Avalonia.Point)">
            <summary>
            Draws a Bezier curve to the specified point.
            </summary>
            <param name="point1">The first control point used to specify the shape of the curve.</param>
            <param name="point2">The second control point used to specify the shape of the curve.</param>
            <param name="point3">The destination point for the end of the curve.</param>
        </member>
        <member name="M:Avalonia.Platform.IStreamGeometryContextImpl.QuadraticBezierTo(Avalonia.Point,Avalonia.Point)">
            <summary>
            Draws a quadratic Bezier curve to the specified point
            </summary>
            <param name="control">Control point</param>
            <param name="endPoint">DestinationPoint</param>
        </member>
        <member name="M:Avalonia.Platform.IStreamGeometryContextImpl.LineTo(Avalonia.Point)">
            <summary>
            Draws a line to the specified point.
            </summary>
            <param name="point">The destination point.</param>
        </member>
        <member name="M:Avalonia.Platform.IStreamGeometryContextImpl.EndFigure(System.Boolean)">
            <summary>
            Ends the figure started by <see cref="M:Avalonia.Platform.IStreamGeometryContextImpl.BeginFigure(Avalonia.Point,System.Boolean)"/>.
            </summary>
            <param name="isClosed">Whether the figure is closed.</param>
        </member>
        <member name="T:Avalonia.Platform.IStreamGeometryImpl">
            <summary>
            Defines the platform-specific interface for a <see cref="T:Avalonia.Media.StreamGeometry"/>.
            </summary>
        </member>
        <member name="M:Avalonia.Platform.IStreamGeometryImpl.Clone">
            <summary>
            Clones the geometry.
            </summary>
            <returns>A cloned geometry.</returns>
        </member>
        <member name="M:Avalonia.Platform.IStreamGeometryImpl.Open">
            <summary>
            Opens the geometry to start defining it.
            </summary>
            <returns>
            An <see cref="T:Avalonia.Platform.IStreamGeometryContextImpl"/> which can be used to define the geometry.
            </returns>
        </member>
        <member name="T:Avalonia.RelativeUnit">
            <summary>
            Defines the reference point units of an <see cref="T:Avalonia.RelativePoint"/> or 
            <see cref="T:Avalonia.RelativeRect"/>.
            </summary>
        </member>
        <member name="F:Avalonia.RelativeUnit.Relative">
            <summary>
            The point is expressed as a fraction of the containing element's size.
            </summary>
        </member>
        <member name="F:Avalonia.RelativeUnit.Absolute">
            <summary>
            The point is absolute (i.e. in pixels).
            </summary>
        </member>
        <member name="T:Avalonia.RelativePoint">
            <summary>
            Defines a point that may be defined relative to a containing element.
            </summary>
        </member>
        <member name="F:Avalonia.RelativePoint.TopLeft">
            <summary>
            A point at the top left of the containing element.
            </summary>
        </member>
        <member name="F:Avalonia.RelativePoint.Center">
            <summary>
            A point at the center of the containing element.
            </summary>
        </member>
        <member name="F:Avalonia.RelativePoint.BottomRight">
            <summary>
            A point at the bottom right of the containing element.
            </summary>
        </member>
        <member name="M:Avalonia.RelativePoint.#ctor(System.Double,System.Double,Avalonia.RelativeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.RelativePoint"/> struct.
            </summary>
            <param name="x">The X point.</param>
            <param name="y">The Y point</param>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:Avalonia.RelativePoint.#ctor(Avalonia.Point,Avalonia.RelativeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.RelativePoint"/> struct.
            </summary>
            <param name="point">The point.</param>
            <param name="unit">The unit.</param>
        </member>
        <member name="P:Avalonia.RelativePoint.Point">
            <summary>
            Gets the point.
            </summary>
        </member>
        <member name="P:Avalonia.RelativePoint.Unit">
            <summary>
            Gets the unit.
            </summary>
        </member>
        <member name="M:Avalonia.RelativePoint.op_Equality(Avalonia.RelativePoint,Avalonia.RelativePoint)">
            <summary>
            Checks for equality between two <see cref="T:Avalonia.RelativePoint"/>s.
            </summary>
            <param name="left">The first point.</param>
            <param name="right">The second point.</param>
            <returns>True if the points are equal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.RelativePoint.op_Inequality(Avalonia.RelativePoint,Avalonia.RelativePoint)">
            <summary>
            Checks for unequality between two <see cref="T:Avalonia.RelativePoint"/>s.
            </summary>
            <param name="left">The first point.</param>
            <param name="right">The second point.</param>
            <returns>True if the points are unequal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.RelativePoint.Equals(System.Object)">
            <summary>
            Checks if the <see cref="T:Avalonia.RelativePoint"/> equals another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the objects are equal, otherwise false.</returns>
        </member>
        <member name="M:Avalonia.RelativePoint.Equals(Avalonia.RelativePoint)">
            <summary>
            Checks if the <see cref="T:Avalonia.RelativePoint"/> equals another point.
            </summary>
            <param name="p">The other point.</param>
            <returns>True if the objects are equal, otherwise false.</returns>
        </member>
        <member name="M:Avalonia.RelativePoint.GetHashCode">
            <summary>
            Gets a hashcode for a <see cref="T:Avalonia.RelativePoint"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Avalonia.RelativePoint.ToPixels(Avalonia.Size)">
            <summary>
            Converts a <see cref="T:Avalonia.RelativePoint"/> into pixels.
            </summary>
            <param name="size">The size of the visual.</param>
            <returns>The origin point in pixels.</returns>
        </member>
        <member name="M:Avalonia.RelativePoint.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses a <see cref="T:Avalonia.RelativePoint"/> string.
            </summary>
            <param name="s">The string.</param>
            <param name="culture">The current culture.</param>
            <returns>The parsed <see cref="T:Avalonia.RelativePoint"/>.</returns>
        </member>
        <member name="T:Avalonia.Point">
            <summary>
            Defines a point.
            </summary>
        </member>
        <member name="F:Avalonia.Point._x">
            <summary>
            The X position.
            </summary>
        </member>
        <member name="F:Avalonia.Point._y">
            <summary>
            The Y position.
            </summary>
        </member>
        <member name="M:Avalonia.Point.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Point"/> structure.
            </summary>
            <param name="x">The X position.</param>
            <param name="y">The Y position.</param>
        </member>
        <member name="P:Avalonia.Point.X">
            <summary>
            Gets the X position.
            </summary>
        </member>
        <member name="P:Avalonia.Point.Y">
            <summary>
            Gets the Y position.
            </summary>
        </member>
        <member name="M:Avalonia.Point.op_Implicit(Avalonia.Point)~Avalonia.Vector">
            <summary>
            Converts the <see cref="T:Avalonia.Point"/> to a <see cref="T:Avalonia.Vector"/>.
            </summary>
            <param name="p">The point.</param>
        </member>
        <member name="M:Avalonia.Point.op_UnaryNegation(Avalonia.Point)">
            <summary>
            Negates a point.
            </summary>
            <param name="a">The point.</param>
            <returns>The negated point.</returns>
        </member>
        <member name="M:Avalonia.Point.op_Equality(Avalonia.Point,Avalonia.Point)">
            <summary>
            Checks for equality between two <see cref="T:Avalonia.Point"/>s.
            </summary>
            <param name="left">The first point.</param>
            <param name="right">The second point.</param>
            <returns>True if the points are equal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.Point.op_Inequality(Avalonia.Point,Avalonia.Point)">
            <summary>
            Checks for unequality between two <see cref="T:Avalonia.Point"/>s.
            </summary>
            <param name="left">The first point.</param>
            <param name="right">The second point.</param>
            <returns>True if the points are unequal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.Point.op_Addition(Avalonia.Point,Avalonia.Point)">
            <summary>
            Adds two points.
            </summary>
            <param name="a">The first point.</param>
            <param name="b">The second point.</param>
            <returns>A point that is the result of the addition.</returns>
        </member>
        <member name="M:Avalonia.Point.op_Addition(Avalonia.Point,Avalonia.Vector)">
            <summary>
            Adds a vector to a point.
            </summary>
            <param name="a">The point.</param>
            <param name="b">The vector.</param>
            <returns>A point that is the result of the addition.</returns>
        </member>
        <member name="M:Avalonia.Point.op_Subtraction(Avalonia.Point,Avalonia.Point)">
            <summary>
            Subtracts two points.
            </summary>
            <param name="a">The first point.</param>
            <param name="b">The second point.</param>
            <returns>A point that is the result of the subtraction.</returns>
        </member>
        <member name="M:Avalonia.Point.op_Subtraction(Avalonia.Point,Avalonia.Vector)">
            <summary>
            Subtracts a vector from a point.
            </summary>
            <param name="a">The point.</param>
            <param name="b">The vector.</param>
            <returns>A point that is the result of the subtraction.</returns>
        </member>
        <member name="M:Avalonia.Point.op_Multiply(Avalonia.Point,System.Double)">
            <summary>
            Multiplies a point by a factor coordinate-wise
            </summary>
            <param name="p">Point to multiply</param>
            <param name="k">Factor</param>
            <returns>Points having its coordinates multiplied</returns>
        </member>
        <member name="M:Avalonia.Point.op_Multiply(System.Double,Avalonia.Point)">
            <summary>
            Multiplies a point by a factor coordinate-wise
            </summary>
            <param name="p">Point to multiply</param>
            <param name="k">Factor</param>
            <returns>Points having its coordinates multiplied</returns>
        </member>
        <member name="M:Avalonia.Point.op_Division(Avalonia.Point,System.Double)">
            <summary>
            Divides a point by a factor coordinate-wise
            </summary>
            <param name="p">Point to divide by</param>
            <param name="k">Factor</param>
            <returns>Points having its coordinates divided</returns>
        </member>
        <member name="M:Avalonia.Point.op_Multiply(Avalonia.Point,Avalonia.Matrix)">
            <summary>
            Applies a matrix to a point.
            </summary>
            <param name="point">The point.</param>
            <param name="matrix">The matrix.</param>
            <returns>The resulting point.</returns>
        </member>
        <member name="M:Avalonia.Point.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses a <see cref="T:Avalonia.Point"/> string.
            </summary>
            <param name="s">The string.</param>
            <param name="culture">The current culture.</param>
            <returns>The <see cref="T:Avalonia.Thickness"/>.</returns>
        </member>
        <member name="M:Avalonia.Point.Equals(System.Object)">
            <summary>
            Checks for equality between a point and an object.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            True if <paramref name="obj"/> is a point that equals the current point.
            </returns>
        </member>
        <member name="M:Avalonia.Point.GetHashCode">
            <summary>
            Returns a hash code for a <see cref="T:Avalonia.Point"/>.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Avalonia.Point.ToString">
            <summary>
            Returns the string representation of the point.
            </summary>
            <returns>The string representation of the point.</returns>
        </member>
        <member name="M:Avalonia.Point.Transform(Avalonia.Matrix)">
            <summary>
            Transforms the point by a matrix.
            </summary>
            <param name="transform">The transform.</param>
            <returns>The transformed point.</returns>
        </member>
        <member name="M:Avalonia.Point.WithX(System.Double)">
            <summary>
            Returns a new point with the specified X coordinate.
            </summary>
            <param name="x">The X coordinate.</param>
            <returns>The new point.</returns>
        </member>
        <member name="M:Avalonia.Point.WithY(System.Double)">
            <summary>
            Returns a new point with the specified Y coordinate.
            </summary>
            <param name="y">The Y coordinate.</param>
            <returns>The new point.</returns>
        </member>
        <member name="T:Avalonia.RelativeRect">
            <summary>
            Defines a rectangle that may be defined relative to a containing element.
            </summary>
        </member>
        <member name="F:Avalonia.RelativeRect.Fill">
            <summary>
            A rectangle that represents 100% of an area.
            </summary>
        </member>
        <member name="M:Avalonia.RelativeRect.#ctor(System.Double,System.Double,System.Double,System.Double,Avalonia.RelativeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.RelativeRect"/> structure.
            </summary>
            <param name="x">The X position.</param>
            <param name="y">The Y position.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="unit">The unit of the rect.</param>
        </member>
        <member name="M:Avalonia.RelativeRect.#ctor(Avalonia.Rect,Avalonia.RelativeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.RelativeRect"/> structure.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="unit">The unit of the rect.</param>
        </member>
        <member name="M:Avalonia.RelativeRect.#ctor(Avalonia.Size,Avalonia.RelativeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.RelativeRect"/> structure.
            </summary>
            <param name="size">The size of the rectangle.</param>
            <param name="unit">The unit of the rect.</param>
        </member>
        <member name="M:Avalonia.RelativeRect.#ctor(Avalonia.Point,Avalonia.Size,Avalonia.RelativeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.RelativeRect"/> structure.
            </summary>
            <param name="position">The position of the rectangle.</param>
            <param name="size">The size of the rectangle.</param>
            <param name="unit">The unit of the rect.</param>
        </member>
        <member name="M:Avalonia.RelativeRect.#ctor(Avalonia.Point,Avalonia.Point,Avalonia.RelativeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.RelativeRect"/> structure.
            </summary>
            <param name="topLeft">The top left position of the rectangle.</param>
            <param name="bottomRight">The bottom right position of the rectangle.</param>
            <param name="unit">The unit of the rect.</param>
        </member>
        <member name="P:Avalonia.RelativeRect.Unit">
            <summary>
            Gets the unit of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.RelativeRect.Rect">
            <summary>
            Gets the rectangle.
            </summary>
        </member>
        <member name="M:Avalonia.RelativeRect.op_Equality(Avalonia.RelativeRect,Avalonia.RelativeRect)">
            <summary>
            Checks for equality between two <see cref="T:Avalonia.RelativeRect"/>s.
            </summary>
            <param name="left">The first rectangle.</param>
            <param name="right">The second rectangle.</param>
            <returns>True if the rectangles are equal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.RelativeRect.op_Inequality(Avalonia.RelativeRect,Avalonia.RelativeRect)">
            <summary>
            Checks for unequality between two <see cref="T:Avalonia.RelativeRect"/>s.
            </summary>
            <param name="left">The first rectangle.</param>
            <param name="right">The second rectangle.</param>
            <returns>True if the rectangles are unequal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.RelativeRect.Equals(System.Object)">
            <summary>
            Checks if the <see cref="T:Avalonia.RelativeRect"/> equals another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the objects are equal, otherwise false.</returns>
        </member>
        <member name="M:Avalonia.RelativeRect.Equals(Avalonia.RelativeRect)">
            <summary>
            Checks if the <see cref="T:Avalonia.RelativeRect"/> equals another rectangle.
            </summary>
            <param name="p">The other rectangle.</param>
            <returns>True if the objects are equal, otherwise false.</returns>
        </member>
        <member name="M:Avalonia.RelativeRect.GetHashCode">
            <summary>
            Gets a hashcode for a <see cref="T:Avalonia.RelativeRect"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Avalonia.RelativeRect.ToPixels(Avalonia.Size)">
            <summary>
            Converts a <see cref="T:Avalonia.RelativeRect"/> into pixels.
            </summary>
            <param name="size">The size of the visual.</param>
            <returns>The origin point in pixels.</returns>
        </member>
        <member name="M:Avalonia.RelativeRect.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses a <see cref="T:Avalonia.RelativeRect"/> string.
            </summary>
            <param name="s">The string.</param>
            <param name="culture">The current culture.</param>
            <returns>The parsed <see cref="T:Avalonia.RelativeRect"/>.</returns>
        </member>
        <member name="T:Avalonia.Rect">
            <summary>
            Defines a rectangle.
            </summary>
        </member>
        <member name="F:Avalonia.Rect.Empty">
            <summary>
            An empty rectangle.
            </summary>
        </member>
        <member name="F:Avalonia.Rect._x">
            <summary>
            The X position.
            </summary>
        </member>
        <member name="F:Avalonia.Rect._y">
            <summary>
            The Y position.
            </summary>
        </member>
        <member name="F:Avalonia.Rect._width">
            <summary>
            The width.
            </summary>
        </member>
        <member name="F:Avalonia.Rect._height">
            <summary>
            The height.
            </summary>
        </member>
        <member name="M:Avalonia.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Rect"/> structure.
            </summary>
            <param name="x">The X position.</param>
            <param name="y">The Y position.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Avalonia.Rect.#ctor(Avalonia.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Rect"/> structure.
            </summary>
            <param name="size">The size of the rectangle.</param>
        </member>
        <member name="M:Avalonia.Rect.#ctor(Avalonia.Point,Avalonia.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Rect"/> structure.
            </summary>
            <param name="position">The position of the rectangle.</param>
            <param name="size">The size of the rectangle.</param>
        </member>
        <member name="M:Avalonia.Rect.#ctor(Avalonia.Point,Avalonia.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Rect"/> structure.
            </summary>
            <param name="topLeft">The top left position of the rectangle.</param>
            <param name="bottomRight">The bottom right position of the rectangle.</param>
        </member>
        <member name="P:Avalonia.Rect.X">
            <summary>
            Gets the X position.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.Y">
            <summary>
            Gets the Y position.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.Position">
            <summary>
            Gets the position of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.Size">
            <summary>
            Gets the size of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.Right">
            <summary>
            Gets the right position of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.Bottom">
            <summary>
            Gets the bottom position of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.TopLeft">
            <summary>
            Gets the top left point of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.TopRight">
            <summary>
            Gets the top right point of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.BottomLeft">
            <summary>
            Gets the bottom left point of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.BottomRight">
            <summary>
            Gets the bottom right point of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.Center">
            <summary>
            Gets the center point of the rectangle.
            </summary>
        </member>
        <member name="P:Avalonia.Rect.IsEmpty">
            <summary>
            Gets a value that indicates whether the rectangle is empty.
            </summary>
        </member>
        <member name="M:Avalonia.Rect.op_Equality(Avalonia.Rect,Avalonia.Rect)">
            <summary>
            Checks for equality between two <see cref="T:Avalonia.Rect"/>s.
            </summary>
            <param name="left">The first rect.</param>
            <param name="right">The second rect.</param>
            <returns>True if the rects are equal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.Rect.op_Inequality(Avalonia.Rect,Avalonia.Rect)">
            <summary>
            Checks for unequality between two <see cref="T:Avalonia.Rect"/>s.
            </summary>
            <param name="left">The first rect.</param>
            <param name="right">The second rect.</param>
            <returns>True if the rects are unequal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.Rect.op_Multiply(Avalonia.Rect,Avalonia.Vector)">
            <summary>
            Multiplies a rectangle by a vector.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="scale">The vector scale.</param>
            <returns>The scaled rectangle.</returns>
        </member>
        <member name="M:Avalonia.Rect.op_Multiply(Avalonia.Rect,Avalonia.Matrix)">
            <summary>
            Transforms a rectangle by a matrix and returns the axis-aligned bounding box.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="matrix">The matrix.</param>
            <returns>The axis-aligned bounding box.</returns>
        </member>
        <member name="M:Avalonia.Rect.op_Division(Avalonia.Rect,Avalonia.Vector)">
            <summary>
            Divides a rectangle by a vector.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="scale">The vector scale.</param>
            <returns>The scaled rectangle.</returns>
        </member>
        <member name="M:Avalonia.Rect.Contains(Avalonia.Point)">
            <summary>
            Determines whether a points in in the bounds of the rectangle.
            </summary>
            <param name="p">The point.</param>
            <returns>true if the point is in the bounds of the rectangle; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.Rect.CenterIn(Avalonia.Rect)">
            <summary>
            Centers another rectangle in this rectangle.
            </summary>
            <param name="rect">The rectangle to center.</param>
            <returns>The centered rectangle.</returns>
        </member>
        <member name="M:Avalonia.Rect.Inflate(System.Double)">
            <summary>
            Inflates the rectangle.
            </summary>
            <param name="thickness">The thickness.</param>
            <returns>The inflated rectangle.</returns>
        </member>
        <member name="M:Avalonia.Rect.Inflate(Avalonia.Thickness)">
            <summary>
            Inflates the rectangle.
            </summary>
            <param name="thickness">The thickness.</param>
            <returns>The inflated rectangle.</returns>
        </member>
        <member name="M:Avalonia.Rect.Deflate(System.Double)">
            <summary>
            Deflates the rectangle.
            </summary>
            <param name="thickness">The thickness.</param>
            <returns>The deflated rectangle.</returns>
            <remarks>The deflated rectangle size cannot be less than 0.</remarks>
        </member>
        <member name="M:Avalonia.Rect.Deflate(Avalonia.Thickness)">
            <summary>
            Deflates the rectangle by a <see cref="T:Avalonia.Thickness"/>.
            </summary>
            <param name="thickness">The thickness.</param>
            <returns>The deflated rectangle.</returns>
            <remarks>The deflated rectangle size cannot be less than 0.</remarks>
        </member>
        <member name="M:Avalonia.Rect.Equals(System.Object)">
            <summary>
            Returns a boolean indicating whether the given object is equal to this rectangle.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns>True if the object is equal to this rectangle; false otherwise.</returns>
        </member>
        <member name="M:Avalonia.Rect.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Avalonia.Rect.Intersect(Avalonia.Rect)">
            <summary>
            Gets the intersection of two rectangles.
            </summary>
            <param name="rect">The other rectangle.</param>
            <returns>The intersection.</returns>
        </member>
        <member name="M:Avalonia.Rect.Intersects(Avalonia.Rect)">
            <summary>
            Determines whether a rectangle intersects with this rectangle.
            </summary>
            <param name="rect">The other rectangle.</param>
            <returns>
            True if the specified rectangle intersects with this one; otherwise false.
            </returns>
        </member>
        <member name="M:Avalonia.Rect.TransformToAABB(Avalonia.Matrix)">
            <summary>
            Returns the axis-aligned bounding box of a transformed rectangle.
            </summary>
            <param name="matrix">The transform.</param>
            <returns>The bounding box</returns>
        </member>
        <member name="M:Avalonia.Rect.Translate(Avalonia.Vector)">
            <summary>
            Translates the rectangle by an offset.
            </summary>
            <param name="offset">The offset.</param>
            <returns>The translated rectangle.</returns>
        </member>
        <member name="M:Avalonia.Rect.WithX(System.Double)">
            <summary>
            Returns a new <see cref="T:Avalonia.Rect"/> with the specified X position.
            </summary>
            <param name="x">The x position.</param>
            <returns>The new <see cref="T:Avalonia.Rect"/>.</returns>
        </member>
        <member name="M:Avalonia.Rect.WithY(System.Double)">
            <summary>
            Returns a new <see cref="T:Avalonia.Rect"/> with the specified Y position.
            </summary>
            <param name="y">The y position.</param>
            <returns>The new <see cref="T:Avalonia.Rect"/>.</returns>
        </member>
        <member name="M:Avalonia.Rect.WithWidth(System.Double)">
            <summary>
            Returns a new <see cref="T:Avalonia.Rect"/> with the specified width.
            </summary>
            <param name="width">The width.</param>
            <returns>The new <see cref="T:Avalonia.Rect"/>.</returns>
        </member>
        <member name="M:Avalonia.Rect.WithHeight(System.Double)">
            <summary>
            Returns a new <see cref="T:Avalonia.Rect"/> with the specified height.
            </summary>
            <param name="height">The height.</param>
            <returns>The new <see cref="T:Avalonia.Rect"/>.</returns>
        </member>
        <member name="M:Avalonia.Rect.ToString">
            <summary>
            Returns the string representation of the rectangle.
            </summary>
            <returns>The string representation of the rectangle.</returns>
        </member>
        <member name="T:Avalonia.Rendering.IRenderRoot">
            <summary>
            Represents the root of a renderable tree.
            </summary>
        </member>
        <member name="P:Avalonia.Rendering.IRenderRoot.RenderQueueManager">
            <summary>
            Gets the render manager which schedules renders.
            </summary>
        </member>
        <member name="M:Avalonia.Rendering.IRenderRoot.PointToClient(Avalonia.Point)">
            <summary>
            Converts a point from screen to client coordinates.
            </summary>
            <param name="point">The point in screen coordinates.</param>
            <returns>The point in client coordinates.</returns>
        </member>
        <member name="M:Avalonia.Rendering.IRenderRoot.PointToScreen(Avalonia.Point)">
            <summary>
            Converts a point from client to screen coordinates.
            </summary>
            <param name="point">The point in client coordinates.</param>
            <returns>The point in screen coordinates.</returns>
        </member>
        <member name="T:Avalonia.Rendering.IRenderQueueManager">
            <summary>
            Defines the interface for a <see cref="T:Avalonia.Rendering.RenderQueueManager"/>.
            </summary>
        </member>
        <member name="P:Avalonia.Rendering.IRenderQueueManager.RenderNeeded">
            <summary>
            Gets an observable that is fired whenever a render is required.
            </summary>
        </member>
        <member name="M:Avalonia.Rendering.IRenderQueueManager.InvalidateRender(Avalonia.VisualTree.IVisual)">
            <summary>
            Invalidates the render for the specified visual and raises <see cref="P:Avalonia.Rendering.IRenderQueueManager.RenderNeeded"/>.
            </summary>
            <param name="visual">The visual.</param>
        </member>
        <member name="M:Avalonia.Rendering.IRenderQueueManager.RenderFinished">
            <summary>
            Called when rendering is finished.
            </summary>
        </member>
        <member name="T:Avalonia.Rendering.RendererMixin">
            <summary>
            Extension methods for rendering.
            </summary>
            <remarks>
            This class provides implements the platform-independent parts of <see cref="T:Avalonia.Platform.IRenderTarget"/>.
            </remarks>
        </member>
        <member name="P:Avalonia.Rendering.RendererMixin.DrawFpsCounter">
            <summary>
            Gets or sets a value which determines whether an FPS counted will be drawn on each
            rendered frame.
            </summary>
        </member>
        <member name="M:Avalonia.Rendering.RendererMixin.Render(Avalonia.Platform.IRenderTarget,Avalonia.VisualTree.IVisual)">
            <summary>
            Renders the specified visual.
            </summary>
            <param name="renderTarget">IRenderer instance</param>
            <param name="visual">The visual to render.</param>
        </member>
        <member name="M:Avalonia.Rendering.RendererMixin.Render(Avalonia.Media.DrawingContext,Avalonia.VisualTree.IVisual)">
            <summary>
            Renders the specified visual.
            </summary>
            <param name="visual">The visual to render.</param>
            <param name="context">The drawing context.</param>
        </member>
        <member name="M:Avalonia.Rendering.RendererMixin.Render(Avalonia.Media.DrawingContext,Avalonia.VisualTree.IVisual,Avalonia.Rect)">
            <summary>
            Renders the specified visual.
            </summary>
            <param name="visual">The visual to render.</param>
            <param name="context">The drawing context.</param>
            <param name="clipRect">
            The current clip rect, in coordinates relative to <paramref name="visual"/>.
            </param>
        </member>
        <member name="T:Avalonia.Rendering.RenderQueueManager">
            <summary>
            Schedules the rendering of a tree.
            </summary>
        </member>
        <member name="P:Avalonia.Rendering.RenderQueueManager.RenderNeeded">
            <summary>
            Gets an observable that is fired whenever a render is required.
            </summary>
        </member>
        <member name="P:Avalonia.Rendering.RenderQueueManager.RenderQueued">
            <summary>
            Gets a value indicating whether a render is queued.
            </summary>
        </member>
        <member name="M:Avalonia.Rendering.RenderQueueManager.InvalidateRender(Avalonia.VisualTree.IVisual)">
            <summary>
            Invalidates the render for the specified visual and raises <see cref="P:Avalonia.Rendering.RenderQueueManager.RenderNeeded"/>.
            </summary>
            <param name="visual">The visual.</param>
        </member>
        <member name="M:Avalonia.Rendering.RenderQueueManager.RenderFinished">
            <summary>
            Called when rendering is finished.
            </summary>
        </member>
        <member name="T:Avalonia.Size">
            <summary>
            Defines a size.
            </summary>
        </member>
        <member name="F:Avalonia.Size.Infinity">
            <summary>
            A size representing infinity.
            </summary>
        </member>
        <member name="F:Avalonia.Size.Empty">
            <summary>
            A size representing zero
            </summary>
        </member>
        <member name="F:Avalonia.Size._width">
            <summary>
            The width.
            </summary>
        </member>
        <member name="F:Avalonia.Size._height">
            <summary>
            The height.
            </summary>
        </member>
        <member name="M:Avalonia.Size.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Size"/> structure.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Avalonia.Size.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:Avalonia.Size.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="M:Avalonia.Size.op_Equality(Avalonia.Size,Avalonia.Size)">
            <summary>
            Checks for equality between two <see cref="T:Avalonia.Size"/>s.
            </summary>
            <param name="left">The first size.</param>
            <param name="right">The second size.</param>
            <returns>True if the sizes are equal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.Size.op_Inequality(Avalonia.Size,Avalonia.Size)">
            <summary>
            Checks for unequality between two <see cref="T:Avalonia.Size"/>s.
            </summary>
            <param name="left">The first size.</param>
            <param name="right">The second size.</param>
            <returns>True if the sizes are unequal; otherwise false.</returns>
        </member>
        <member name="M:Avalonia.Size.op_Multiply(Avalonia.Size,Avalonia.Vector)">
            <summary>
            Scales a size.
            </summary>
            <param name="size">The size</param>
            <param name="scale">The scaling factor.</param>
            <returns>The scaled size.</returns>
        </member>
        <member name="M:Avalonia.Size.op_Division(Avalonia.Size,Avalonia.Vector)">
            <summary>
            Scales a size.
            </summary>
            <param name="size">The size</param>
            <param name="scale">The scaling factor.</param>
            <returns>The scaled size.</returns>
        </member>
        <member name="M:Avalonia.Size.op_Multiply(Avalonia.Size,System.Double)">
            <summary>
            Scales a size.
            </summary>
            <param name="size">The size</param>
            <param name="scale">The scaling factor.</param>
            <returns>The scaled size.</returns>
        </member>
        <member name="M:Avalonia.Size.op_Division(Avalonia.Size,System.Double)">
            <summary>
            Scales a size.
            </summary>
            <param name="size">The size</param>
            <param name="scale">The scaling factor.</param>
            <returns>The scaled size.</returns>
        </member>
        <member name="M:Avalonia.Size.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses a <see cref="T:Avalonia.Size"/> string.
            </summary>
            <param name="s">The string.</param>
            <param name="culture">The current culture.</param>
            <returns>The <see cref="T:Avalonia.Size"/>.</returns>
        </member>
        <member name="M:Avalonia.Size.Constrain(Avalonia.Size)">
            <summary>
            Constrains the size.
            </summary>
            <param name="constraint">The size to constrain to.</param>
            <returns>The constrained size.</returns>
        </member>
        <member name="M:Avalonia.Size.Deflate(Avalonia.Thickness)">
            <summary>
            Deflates the size by a <see cref="T:Avalonia.Thickness"/>.
            </summary>
            <param name="thickness">The thickness.</param>
            <returns>The deflated size.</returns>
            <remarks>The deflated size cannot be less than 0.</remarks>
        </member>
        <member name="M:Avalonia.Size.Equals(System.Object)">
            <summary>
            Checks for equality between a size and an object.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            True if <paramref name="obj"/> is a size that equals the current size.
            </returns>
        </member>
        <member name="M:Avalonia.Size.GetHashCode">
            <summary>
            Returns a hash code for a <see cref="T:Avalonia.Size"/>.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Avalonia.Size.Inflate(Avalonia.Thickness)">
            <summary>
            Inflates the size by a <see cref="T:Avalonia.Thickness"/>.
            </summary>
            <param name="thickness">The thickness.</param>
            <returns>The inflated size.</returns>
        </member>
        <member name="M:Avalonia.Size.WithWidth(System.Double)">
            <summary>
            Returns a new <see cref="T:Avalonia.Size"/> with the same height and the specified width.
            </summary>
            <param name="width">The width.</param>
            <returns>The new <see cref="T:Avalonia.Size"/>.</returns>
        </member>
        <member name="M:Avalonia.Size.WithHeight(System.Double)">
            <summary>
            Returns a new <see cref="T:Avalonia.Size"/> with the same width and the specified height.
            </summary>
            <param name="height">The height.</param>
            <returns>The new <see cref="T:Avalonia.Size"/>.</returns>
        </member>
        <member name="M:Avalonia.Size.ToString">
            <summary>
            Returns the string representation of the size.
            </summary>
            <returns>The string representation of the size.</returns>
        </member>
        <member name="T:Avalonia.Thickness">
            <summary>
            Describes the thickness of a frame around a rectangle.
            </summary>
        </member>
        <member name="F:Avalonia.Thickness._left">
            <summary>
            The thickness on the left.
            </summary>
        </member>
        <member name="F:Avalonia.Thickness._top">
            <summary>
            The thickness on the top.
            </summary>
        </member>
        <member name="F:Avalonia.Thickness._right">
            <summary>
            The thickness on the right.
            </summary>
        </member>
        <member name="F:Avalonia.Thickness._bottom">
            <summary>
            The thickness on the bottom.
            </summary>
        </member>
        <member name="M:Avalonia.Thickness.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Thickness"/> structure.
            </summary>
            <param name="uniformLength">The length that should be applied to all sides.</param>
        </member>
        <member name="M:Avalonia.Thickness.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Thickness"/> structure.
            </summary>
            <param name="horizontal">The thickness on the left and right.</param>
            <param name="vertical">The thickness on the top and bottom.</param>
        </member>
        <member name="M:Avalonia.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Thickness"/> structure.
            </summary>
            <param name="left">The thickness on the left.</param>
            <param name="top">The thickness on the top.</param>
            <param name="right">The thickness on the right.</param>
            <param name="bottom">The thickness on the bottom.</param>
        </member>
        <member name="P:Avalonia.Thickness.Left">
            <summary>
            Gets the thickness on the left.
            </summary>
        </member>
        <member name="P:Avalonia.Thickness.Top">
            <summary>
            Gets the thickness on the top.
            </summary>
        </member>
        <member name="P:Avalonia.Thickness.Right">
            <summary>
            Gets the thickness on the right.
            </summary>
        </member>
        <member name="P:Avalonia.Thickness.Bottom">
            <summary>
            Gets the thickness on the bottom.
            </summary>
        </member>
        <member name="P:Avalonia.Thickness.IsEmpty">
            <summary>
            Gets a value indicating whether all sides are set to 0.
            </summary>
        </member>
        <member name="M:Avalonia.Thickness.op_Equality(Avalonia.Thickness,Avalonia.Thickness)">
            <summary>
            Compares two Thicknesses.
            </summary>
            <param name="a">The first thickness.</param>
            <param name="b">The second thickness.</param>
            <returns>The equality.</returns>
        </member>
        <member name="M:Avalonia.Thickness.op_Inequality(Avalonia.Thickness,Avalonia.Thickness)">
            <summary>
            Compares two Thicknesses.
            </summary>
            <param name="a">The first thickness.</param>
            <param name="b">The second thickness.</param>
            <returns>The unequality.</returns>
        </member>
        <member name="M:Avalonia.Thickness.op_Addition(Avalonia.Thickness,Avalonia.Thickness)">
            <summary>
            Adds two Thicknesses.
            </summary>
            <param name="a">The first thickness.</param>
            <param name="b">The second thickness.</param>
            <returns>The equality.</returns>
        </member>
        <member name="M:Avalonia.Thickness.op_Addition(Avalonia.Size,Avalonia.Thickness)">
            <summary>
            Adds a Thickness to a Size.
            </summary>
            <param name="size">The size.</param>
            <param name="thickness">The thickness.</param>
            <returns>The equality.</returns>
        </member>
        <member name="M:Avalonia.Thickness.op_Subtraction(Avalonia.Size,Avalonia.Thickness)">
            <summary>
            Subtracts a Thickness from a Size.
            </summary>
            <param name="size">The size.</param>
            <param name="thickness">The thickness.</param>
            <returns>The equality.</returns>
        </member>
        <member name="M:Avalonia.Thickness.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses a <see cref="T:Avalonia.Thickness"/> string.
            </summary>
            <param name="s">The string.</param>
            <param name="culture">The current culture.</param>
            <returns>The <see cref="T:Avalonia.Thickness"/>.</returns>
        </member>
        <member name="M:Avalonia.Thickness.Equals(System.Object)">
            <summary>
            Checks for equality between a thickness and an object.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            True if <paramref name="obj"/> is a size that equals the current size.
            </returns>
        </member>
        <member name="M:Avalonia.Thickness.GetHashCode">
            <summary>
            Returns a hash code for a <see cref="T:Avalonia.Thickness"/>.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Avalonia.Thickness.ToString">
            <summary>
            Returns the string representation of the thickness.
            </summary>
            <returns>The string representation of the thickness.</returns>
        </member>
        <member name="T:Avalonia.Vector">
            <summary>
            Defines a vector.
            </summary>
        </member>
        <member name="F:Avalonia.Vector._x">
            <summary>
            The X vector.
            </summary>
        </member>
        <member name="F:Avalonia.Vector._y">
            <summary>
            The Y vector.
            </summary>
        </member>
        <member name="M:Avalonia.Vector.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Vector"/> structure.
            </summary>
            <param name="x">The X vector.</param>
            <param name="y">The Y vector.</param>
        </member>
        <member name="P:Avalonia.Vector.X">
            <summary>
            Gets the X vector.
            </summary>
        </member>
        <member name="P:Avalonia.Vector.Y">
            <summary>
            Gets the Y vector.
            </summary>
        </member>
        <member name="M:Avalonia.Vector.op_Explicit(Avalonia.Vector)~Avalonia.Point">
            <summary>
            Converts the <see cref="T:Avalonia.Vector"/> to a <see cref="T:Avalonia.Point"/>.
            </summary>
            <param name="a">The vector.</param>
        </member>
        <member name="M:Avalonia.Vector.op_Multiply(Avalonia.Vector,Avalonia.Vector)">
            <summary>
            Calculates the dot product of two vectors
            </summary>
            <param name="a">First vector</param>
            <param name="b">Second vector</param>
            <returns>The dot product</returns>
        </member>
        <member name="P:Avalonia.Vector.Length">
            <summary>
            Length of the vector
            </summary>
        </member>
        <member name="M:Avalonia.Vector.op_UnaryNegation(Avalonia.Vector)">
            <summary>
            Negates a vector.
            </summary>
            <param name="a">The vector.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Avalonia.Vector.op_Addition(Avalonia.Vector,Avalonia.Vector)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
            <returns>A vector that is the result of the addition.</returns>
        </member>
        <member name="M:Avalonia.Vector.op_Subtraction(Avalonia.Vector,Avalonia.Vector)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
            <returns>A vector that is the result of the subtraction.</returns>
        </member>
        <member name="M:Avalonia.Vector.ToString">
            <summary>
            Returns the string representation of the point.
            </summary>
            <returns>The string representation of the point.</returns>
        </member>
        <member name="M:Avalonia.Vector.WithX(System.Double)">
            <summary>
            Returns a new vector with the specified X coordinate.
            </summary>
            <param name="x">The X coordinate.</param>
            <returns>The new vector.</returns>
        </member>
        <member name="M:Avalonia.Vector.WithY(System.Double)">
            <summary>
            Returns a new vector with the specified Y coordinate.
            </summary>
            <param name="y">The Y coordinate.</param>
            <returns>The new vector.</returns>
        </member>
        <member name="T:Avalonia.VisualExtensions">
            <summary>
            Extension methods for <see cref="T:Avalonia.VisualTree.IVisual"/>.
            </summary>
        </member>
        <member name="M:Avalonia.VisualExtensions.PointToClient(Avalonia.VisualTree.IVisual,Avalonia.Point)">
            <summary>
            Converts a point from screen to client coordinates.
            </summary>
            <param name="visual">The visual.</param>
            <param name="point">The point in screen coordinates.</param>
            <returns>The point in client coordinates.</returns>
        </member>
        <member name="M:Avalonia.VisualExtensions.PointToScreen(Avalonia.VisualTree.IVisual,Avalonia.Point)">
            <summary>
            Converts a point from client to screen coordinates.
            </summary>
            <param name="visual">The visual.</param>
            <param name="point">The point in client coordinates.</param>
            <returns>The point in screen coordinates.</returns>
        </member>
        <member name="M:Avalonia.VisualExtensions.GetRootAndPosition(Avalonia.VisualTree.IVisual)">
            <summary>
            Gets the root of the control's visual tree and the position of the control 
            in the root's coordinate space.
            </summary>
            <param name="v">The visual.</param>
            <returns>A tuple containing the root and the position of the control.</returns>
        </member>
        <member name="T:Avalonia.Visual">
            <summary>
            Base class for controls that provides rendering and related visual properties.
            </summary>
            <remarks>
            The <see cref="T:Avalonia.Visual"/> class acts as a node in the Avalonia scene graph and holds
            all the information needed for an <see cref="T:Avalonia.Platform.IRenderTarget"/> to render the control.
            To traverse the scene graph (aka Visual Tree), use the extension methods defined
            in <see cref="T:Avalonia.VisualExtensions"/>.
            </remarks>
        </member>
        <member name="F:Avalonia.Visual.BoundsProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Visual.Bounds"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Visual.ClipToBoundsProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Visual.ClipToBounds"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Visual.IsVisibleProperty">
            <summary>
            Defines the <see cref="F:Avalonia.Visual.IsVisibleProperty"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Visual.OpacityProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Visual.Opacity"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Visual.RenderTransformProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Visual.RenderTransform"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Visual.TransformOriginProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Visual.TransformOrigin"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Visual.VisualParentProperty">
            <summary>
            Defines the <see cref="P:Avalonia.VisualTree.IVisual.VisualParent"/> property.
            </summary>
        </member>
        <member name="F:Avalonia.Visual.ZIndexProperty">
            <summary>
            Defines the <see cref="P:Avalonia.Visual.ZIndex"/> property.
            </summary>
        </member>
        <member name="M:Avalonia.Visual.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Avalonia.Visual"/> class.
            </summary>
        </member>
        <member name="M:Avalonia.Visual.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.Visual"/> class.
            </summary>
        </member>
        <member name="E:Avalonia.Visual.AttachedToVisualTree">
            <summary>
            Raised when the control is attached to a rooted visual tree.
            </summary>
        </member>
        <member name="E:Avalonia.Visual.DetachedFromVisualTree">
            <summary>
            Raised when the control is detached from a rooted visual tree.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.Bounds">
            <summary>
            Gets the bounds of the scene graph node relative to its parent.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.ClipToBounds">
            <summary>
            Gets a value indicating whether the scene graph node should be clipped to its bounds.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.IsEffectivelyVisible">
            <summary>
            Gets a value indicating whether this scene graph node and all its parents are visible.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.IsVisible">
            <summary>
            Gets a value indicating whether this scene graph node is visible.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.Opacity">
            <summary>
            Gets the opacity of the scene graph node.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.RenderTransform">
            <summary>
            Gets the render transform of the scene graph node.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.TransformOrigin">
            <summary>
            Gets the transform origin of the scene graph node.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.ZIndex">
            <summary>
            Gets the Z index of the node.
            </summary>
            <remarks>
            Controls with a higher <see cref="P:Avalonia.Visual.ZIndex"/> will appear in front of controls with
            a lower ZIndex. If two controls have the same ZIndex then the control that appears
            later in the containing element's children collection will appear on top.
            </remarks>
        </member>
        <member name="P:Avalonia.Visual.VisualChildren">
            <summary>
            Gets the control's visual children.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.VisualRoot">
            <summary>
            Gets the root of the visual tree, if the control is attached to a visual tree.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.Avalonia#VisualTree#IVisual#IsAttachedToVisualTree">
            <summary>
            Gets a value indicating whether this scene graph node is attached to a visual root.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.Avalonia#VisualTree#IVisual#VisualChildren">
            <summary>
            Gets the scene graph node's child nodes.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.Avalonia#VisualTree#IVisual#VisualParent">
            <summary>
            Gets the scene graph node's parent node.
            </summary>
        </member>
        <member name="P:Avalonia.Visual.Avalonia#VisualTree#IVisual#VisualRoot">
            <summary>
            Gets the root of the visual tree, if the control is attached to a visual tree.
            </summary>
        </member>
        <member name="M:Avalonia.Visual.InvalidateVisual">
            <summary>
            Invalidates the visual and queues a repaint.
            </summary>
        </member>
        <member name="M:Avalonia.Visual.Render(Avalonia.Media.DrawingContext)">
            <summary>
            Renders the visual to a <see cref="T:Avalonia.Media.DrawingContext"/>.
            </summary>
            <param name="context">The drawing context.</param>
        </member>
        <member name="M:Avalonia.Visual.TransformToVisual(Avalonia.VisualTree.IVisual)">
            <summary>
            Returns a transform that transforms the visual's coordinates into the coordinates
            of the specified <paramref name="visual"/>.
            </summary>
            <param name="visual">The visual to translate the coordinates to.</param>
            <returns>
            A <see cref="T:Avalonia.Matrix"/> containing the transform or null if the visuals don't share a
            common ancestor.
            </returns>
        </member>
        <member name="M:Avalonia.Visual.AffectsRender(Avalonia.AvaloniaProperty[])">
            <summary>
            Indicates that a property change should cause <see cref="M:Avalonia.Visual.InvalidateVisual"/> to be
            called.
            </summary>
            <param name="properties">The properties.</param>
            <remarks>
            This method should be called in a control's static constructor with each property
            on the control which when changed should cause a redraw. This is similar to WPF's
            FrameworkPropertyMetadata.AffectsRender flag.
            </remarks>
        </member>
        <member name="M:Avalonia.Visual.OnAttachedToVisualTreeCore(Avalonia.VisualTreeAttachmentEventArgs)">
            <summary>
            Calls the <see cref="M:Avalonia.Visual.OnAttachedToVisualTree(Avalonia.VisualTreeAttachmentEventArgs)"/> method 
            for this control and all of its visual descendents.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Avalonia.Visual.OnDetachedFromVisualTreeCore(Avalonia.VisualTreeAttachmentEventArgs)">
            <summary>
            Calls the <see cref="M:Avalonia.Visual.OnDetachedFromVisualTree(Avalonia.VisualTreeAttachmentEventArgs)"/> method 
            for this control and all of its visual descendents.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Avalonia.Visual.OnAttachedToVisualTree(Avalonia.VisualTreeAttachmentEventArgs)">
            <summary>
            Called when the control is added to a visual tree.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Avalonia.Visual.OnDetachedFromVisualTree(Avalonia.VisualTreeAttachmentEventArgs)">
            <summary>
            Called when the control is removed from a visual tree.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Avalonia.Visual.AffectsRenderInvalidate(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when a property changes that should invalidate the visual.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Avalonia.Visual.GetOffsetFrom(Avalonia.VisualTree.IVisual,Avalonia.VisualTree.IVisual)">
            <summary>
            Gets the visual offset from the specified ancestor.
            </summary>
            <param name="ancestor">The ancestor visual.</param>
            <param name="visual">The visual.</param>
            <returns>The visual offset.</returns>
        </member>
        <member name="M:Avalonia.Visual.RenderTransformChanged(Avalonia.AvaloniaPropertyChangedEventArgs)">
            <summary>
            Called when a visual's <see cref="P:Avalonia.Visual.RenderTransform"/> changes.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Avalonia.Visual.ValidateLogicalChild(Avalonia.VisualTree.IVisual)">
            <summary>
            Ensures a visual child is not null.
            </summary>
            <param name="c">The visual child.</param>
        </member>
        <member name="M:Avalonia.Visual.RenderTransformChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the <see cref="P:Avalonia.Visual.RenderTransform"/>'s <see cref="E:Avalonia.Media.Transform.Changed"/> event
            is fired.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Avalonia.Visual.SetVisualParent(Avalonia.Visual)">
            <summary>
            Sets the visual parent of the Visual.
            </summary>
            <param name="value">The visual parent.</param>
        </member>
        <member name="M:Avalonia.Visual.VisualChildrenChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Avalonia.Visual.VisualChildren"/> collection changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="T:Avalonia.VisualTreeAttachmentEventArgs">
            <summary>
            Holds the event arguments for the <see cref="E:Avalonia.Visual.AttachedToVisualTree"/> and 
            <see cref="E:Avalonia.Visual.DetachedFromVisualTree"/> events.
            </summary>
        </member>
        <member name="M:Avalonia.VisualTreeAttachmentEventArgs.#ctor(Avalonia.Rendering.IRenderRoot)">
            <summary>
            Initializes a new instance of the <see cref="T:Avalonia.VisualTreeAttachmentEventArgs"/> class.
            </summary>
            <param name="root">The root visual.</param>
        </member>
        <member name="P:Avalonia.VisualTreeAttachmentEventArgs.Root">
            <summary>
            Gets the root of the visual tree that the visual is being attached to or detached from.
            </summary>
        </member>
    </members>
</doc>
